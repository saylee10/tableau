<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='classic' />
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0keci5n0trro9914h83n118d4gxw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.0zkqtag09ej81m19laio612nkv95'>
            <connection class='textscan' directory='C:/Users/DELL PC/Downloads' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0zkqtag09ej81m19laio612nkv95' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0zkqtag09ej81m19laio612nkv95' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='index' datatype='integer' name='[Calculation_930837811425505282]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category,Region)' hidden='true' name='[Action (Category,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,Region,State)' hidden='true' name='[Action (Category,Region,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,Segment)' hidden='true' name='[Action (Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,State)' hidden='true' name='[Action (Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Sub-Category)' hidden='true' name='[Action (City,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Profit:ok]' type='palette'>
            <map to='#499894'>
              <bucket>-3399.3017</bucket>
            </map>
            <map to='#499894'>
              <bucket>2196.1023000000005</bucket>
            </map>
            <map to='#499894'>
              <bucket>3316.7658999999999</bucket>
            </map>
            <map to='#499894'>
              <bucket>76381.387100000065</bucket>
            </map>
            <map to='#499894'>
              <bucket>76381.387100000167</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>-25729.356299999999</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>185.92159999999998</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1706.5028</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>8401.8004000000001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10823.187400000001</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>-7490.9122000000034</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1183.8118999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2196.1023000000009</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>18382.936299999998</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>18597.950400000002</bucket>
            </map>
            <map to='#79706e'>
              <bucket>-25729.356299999996</bucket>
            </map>
            <map to='#79706e'>
              <bucket>230.14969999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3316.7659000000003</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5786.8252999999986</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>-1190.4704999999994</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2244.9782999999998</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3511.4918000000002</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>-6527.8579000000009</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1706.5027999999998</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2244.9783000000002</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>18597.950400000016</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>24463.187599999994</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>-3399.3017000000018</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1157.1161</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>7031.1787999999988</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>9772.9138000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>-16971.376600000018</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>230.1497</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1769.0566000000003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>9772.9137999999948</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11199.696600000005</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>-7490.9122000000043</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>836.44350000000009</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6436.210500000001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7285.6293000000014</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>-5341.6935999999996</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1769.0566000000008</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2546.5335000000005</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>24463.187600000012</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>33402.651699999995</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>-16971.376599999985</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>394.82830000000001</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3511.4917999999998</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>6436.2104999999992</bucket>
            </map>
            <map to='#d37295'>
              <bucket>-15559.960300000006</bucket>
            </map>
            <map to='#d37295'>
              <bucket>454.4862</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4008.6870999999996</bucket>
            </map>
            <map to='#d37295'>
              <bucket>6785.5016000000051</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>-5341.6936000000005</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1059.5892999999999</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6785.5016000000005</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>8401.8003999999983</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>-1190.4704999999997</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1183.8119000000002</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>7285.6293000000005</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>9977.3748000000014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>100.196</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2546.5335</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4008.6871000000001</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>-3427.9245999999998</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2037.0942000000009</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3172.9761999999982</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>33402.651700000009</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>74038.548600000053</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>-15559.960300000013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>836.44349999999997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1833.3285000000001</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11199.696600000003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>16250.043300000003</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>-12607.887000000012</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>826.72309999999993</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>5786.8253000000004</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>7031.178799999997</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>185.92160000000001</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3172.9761999999987</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>4853.9560000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>-12607.886999999981</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1059.5893000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2037.0942000000007</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>16250.043300000007</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>18382.936300000005</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0keci5n0trro9914h83n118d4gxw].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0keci5n0trro9914h83n118d4gxw].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_AA0C285EA3634BA7A6E5A0D754AEBB84'>
            <properties context=''>
              <relation connection='textscan.0zkqtag09ej81m19laio612nkv95' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_3D4839B158ED4610BD828318D3E8A9A1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Segment' type='sheet' worksheet='Top 10 cities facing loss ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Segment' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action10_6FD59856AF9B477786ED4ABA2351594E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY STATE' type='sheet' worksheet='Loss In Sate By Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY STATE' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_52D9426FB1CB41DABA9F868E0B6274CB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Region' type='sheet' worksheet='Profit Ratio By Region' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Region' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_9B87558593D249A980F058B412030DF7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Region' type='sheet' worksheet='Profit Ratio By Region And Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Region' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_F67F6F76C1DD4D19B346CE9914A199C2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Region' type='sheet' worksheet='Profit Ratio In States By Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Region' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_BA2764BEC3A5450580E1D09E6646164E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Segment' type='sheet' worksheet='Profit Ratio By Segment' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Segment' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_3FBCFB44143743F583945463C3DA657E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Segment' type='sheet' worksheet='Profit Ratio In Segment By Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Segment' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_7C55851A945E4D1CB98679B82A6CC60C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Segment' type='sheet' worksheet='Profit Ratio By Categoty and Subcategory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Segment' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action9_9037ED1C79D049F4A0DF53468F420AE4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY STATE' type='sheet' worksheet='Profit Ratio By State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY STATE' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_C2FBF615B0D74BA6BB7039A98254F475]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='BY Region' type='sheet' worksheet='Top 5 Cities By Region in States Facing loss' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='BY Region' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Loss In Sate By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_9037ED1C79D049F4A0DF53468F420AE4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{F4ACE277-A1B0-40C0-A2EB-4496B2F32E43}' />
    </worksheet>
    <worksheet name='Profit Ratio &amp; Sales By Shiping Mode of Each SubCategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk]' value='56' />
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' value='56' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk] + [federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk])</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Ship Mode:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{5457C52E-D35D-47B8-A6F6-AEADE1EE72A8}' />
    </worksheet>
    <worksheet name='Profit Ratio By Categoty and Subcategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_3FBCFB44143743F583945463C3DA657E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_3D4839B158ED4610BD828318D3E8A9A1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]'>
            <groupfilter function='level-members' level='[Segment]' user:ui-action-filter='[Action6_BA2764BEC3A5450580E1D09E6646164E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{3AE1A4B0-C89C-401A-9D6D-C68372487729}' />
    </worksheet>
    <worksheet name='Profit Ratio By Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9B87558593D249A980F058B412030DF7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F67F6F76C1DD4D19B346CE9914A199C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_C2FBF615B0D74BA6BB7039A98254F475]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='585' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]' />
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]' />
              <text column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]' />
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EDE0CF24-3D69-496F-8F1B-B7C9F32CE982}' />
    </worksheet>
    <worksheet name='Profit Ratio By Region And Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F67F6F76C1DD4D19B346CE9914A199C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_C2FBF615B0D74BA6BB7039A98254F475]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action3_52D9426FB1CB41DABA9F868E0B6274CB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]'>
            <groupfilter from='&quot;Consumer&quot;' function='range' level='[none:Segment:nk]' to='&quot;Home Office&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]' value='149' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{90EF04E3-F738-4612-8711-41F720C163BB}' />
    </worksheet>
    <worksheet name='Profit Ratio By Segment'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_3FBCFB44143743F583945463C3DA657E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_7C55851A945E4D1CB98679B82A6CC60C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_3D4839B158ED4610BD828318D3E8A9A1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='subtotal' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='2' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
              <text column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F34E69E0-FE5A-425C-96CB-AFD9DC623F56}' />
    </worksheet>
    <worksheet name='Profit Ratio By State'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_2F0734559F0D4C7BBAD7424AA97CAD35]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0keci5n0trro9914h83n118d4gxw].[Longitude (generated)]' field-type='quantitative' max='-8246250.0805365741' min='-13904474.148195684' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0keci5n0trro9914h83n118d4gxw].[Latitude (generated)]' field-type='quantitative' max='6422927.9144727476' min='2234064.7090282985' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
              <text column='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]' />
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]' />
              <geometry column='[federated.0keci5n0trro9914h83n118d4gxw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='239' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='707' />
                <format attr='maxheight' value='707' />
                <format attr='minwidth' value='939' />
                <format attr='maxwidth' value='939' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[Latitude (generated)]</rows>
        <cols>[federated.0keci5n0trro9914h83n118d4gxw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{44944338-A715-4D97-919C-262FDE7334E6}' />
    </worksheet>
    <worksheet name='Profit Ratio In Segment By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_7C55851A945E4D1CB98679B82A6CC60C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_3D4839B158ED4610BD828318D3E8A9A1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]'>
            <groupfilter function='level-members' level='[Segment]' user:ui-action-filter='[Action6_BA2764BEC3A5450580E1D09E6646164E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' value='16' />
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' value='52' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' value='155' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='total' value='solid' />
            <format attr='border-width' data-class='total' value='3' />
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-width' data-class='subtotal' value='3' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' />
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk])</cols>
      </table>
      <simple-id uuid='{77872C20-291D-4AA4-8DA4-250A2E8FAAFB}' />
    </worksheet>
    <worksheet name='Profit Ratio In States By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9B87558593D249A980F058B412030DF7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_C2FBF615B0D74BA6BB7039A98254F475]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action3_52D9426FB1CB41DABA9F868E0B6274CB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (City,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' value='36' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{DA8C5BEB-20B2-41D9-A8E1-FC91D695E781}' />
    </worksheet>
    <worksheet name='Profit Ration in Central Region By Categoty And Subcategoty'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]' />
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</rows>
        <cols>([federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk] / ([federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{8A02C479-335B-425E-A25D-152BA6274BCC}' />
    </worksheet>
    <worksheet name='Top 10 cities facing loss '>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='index' datatype='integer' name='[Calculation_930837811425505282]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_930837811425505282]' derivation='User' name='[usr:Calculation_930837811425505282:ok:9]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]' ordering-type='Field'>
                <order field='[federated.0keci5n0trro9914h83n118d4gxw].[Sub-Category]' />
                <order field='[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]' />
                <sort direction='ASC' using='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_3FBCFB44143743F583945463C3DA657E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_7C55851A945E4D1CB98679B82A6CC60C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]'>
            <groupfilter function='level-members' level='[Segment]' user:ui-action-filter='[Action6_BA2764BEC3A5450580E1D09E6646164E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok:9]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok:9]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok:9]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Segment)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Sub-Category)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='394' />
                <format attr='maxwidth' value='394' />
                <format attr='minheight' value='200' />
                <format attr='maxheight' value='200' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk])</rows>
        <cols>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</cols>
      </table>
      <simple-id uuid='{8BC86DFE-3F0A-4492-9F29-33698B656913}' />
    </worksheet>
    <worksheet name='Top 5 Cities By Region in States Facing loss'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0keci5n0trro9914h83n118d4gxw' />
          </datasources>
          <datasource-dependencies datasource='federated.0keci5n0trro9914h83n118d4gxw'>
            <column caption='profit ratio ' datatype='real' name='[Calculation_1915437276740227072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='index' datatype='integer' name='[Calculation_930837811425505282]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1915437276740227072]' derivation='User' name='[usr:Calculation_1915437276740227072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_930837811425505282]' derivation='User' name='[usr:Calculation_930837811425505282:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_9B87558593D249A980F058B412030DF7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F67F6F76C1DD4D19B346CE9914A199C2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action3_52D9426FB1CB41DABA9F868E0B6274CB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_930837811425505282:ok]' member='5' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]' direction='ASC' measure-to-sort-by='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region,State)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Region)]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</column>
            <column>[federated.0keci5n0trro9914h83n118d4gxw].[Action (Category,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk] / [federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk])</rows>
        <cols>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</cols>
      </table>
      <simple-id uuid='{B86AA3F0-9935-41EC-8286-24995183AF8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BY Region'>
      <style />
      <size maxheight='575' maxwidth='1140' minheight='575' minwidth='1140' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97218' id='7' param='horz' w='98596' x='702' y='1391'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97218' id='5' w='52807' x='702' y='1391'>
              <zone h='48522' id='3' name='Profit Ratio By Region' w='52807' x='702' y='1391'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48696' id='11' name='Profit Ratio In States By Category' w='52807' x='702' y='49913'>
                <layout-cache cell-count-w='11' minheight='264' non-cell-size-w='61' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' fixed-size='522' h='97218' id='29' is-fixed='true' w='45789' x='53509' y='1391'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='48522' id='6' param='vert' w='45789' x='53509' y='1391'>
                <zone h='48522' id='10' name='Profit Ratio By Region And Category' w='45789' x='53509' y='1391'>
                  <layout-cache fixed-size-w='739' minheight='188' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='240' h='48696' id='12' is-fixed='true' name='Top 5 Cities By Region in States Facing loss' w='45789' x='53509' y='49913'>
                <layout-cache minwidth='262' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='31' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97218' id='30' param='vert' w='98596' x='702' y='1391'>
                <zone fixed-size='265' h='48522' id='3' is-fixed='true' name='Profit Ratio By Region' w='52807' x='702' y='1391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='48522' id='10' is-fixed='true' name='Profit Ratio By Region And Category' w='45789' x='53509' y='1391'>
                  <layout-cache fixed-size-w='739' minheight='188' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='48696' id='11' is-fixed='true' name='Profit Ratio In States By Category' w='52807' x='702' y='49913'>
                  <layout-cache cell-count-w='11' minheight='264' non-cell-size-w='61' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='48696' id='12' is-fixed='true' name='Top 5 Cities By Region in States Facing loss' w='45789' x='53509' y='49913'>
                  <layout-cache minwidth='262' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C16CEE1-329A-4AF0-AA0B-D64C2769F099}' />
    </dashboard>
    <dashboard name='BY STATE'>
      <style />
      <size maxheight='550' maxwidth='1100' minheight='550' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97090' id='7' param='horz' w='98546' x='727' y='1455'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97090' id='5' w='98546' x='727' y='1455'>
              <zone h='97090' id='3' name='Profit Ratio By State' w='98546' x='727' y='1455'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='3' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='93636' id='22' name='Loss In Sate By Category' w='10000' x='88545' y='2909'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='30' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97090' id='29' param='vert' w='98546' x='727' y='1455'>
                <zone fixed-size='280' h='97090' id='3' is-fixed='true' name='Profit Ratio By State' w='98546' x='727' y='1455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93636' id='22' is-fixed='true' name='Loss In Sate By Category' w='10000' x='88545' y='2909'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B524A27E-C185-440F-AAC1-271187DCAD3C}' />
    </dashboard>
    <dashboard name='BY Segment'>
      <style />
      <size maxheight='570' maxwidth='1140' minheight='570' minwidth='1140' sizing-mode='fixed' />
      <zones>
        <zone h='50175' id='3' name='Profit Ratio By Segment' w='47281' x='263' y='1053'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='margin' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='50000' id='5' name='Profit Ratio In Segment By Category' w='50877' x='48860' y='1053'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </zone-style>
        </zone>
        <zone h='45088' id='9' name='Top 10 cities facing loss ' w='50877' x='48947' y='54211'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </zone-style>
        </zone>
        <zone h='45263' id='10' name='Profit Ratio By Categoty and Subcategory' w='47544' x='263' y='54211'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='28' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97192' id='27' param='vert' w='98596' x='702' y='1404'>
                <zone fixed-size='280' h='50175' id='3' is-fixed='true' name='Profit Ratio By Segment' w='47281' x='263' y='1053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='50000' id='5' is-fixed='true' name='Profit Ratio In Segment By Category' w='50877' x='48860' y='1053'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='252' h='45263' id='10' is-fixed='true' name='Profit Ratio By Categoty and Subcategory' w='47544' x='263' y='54211'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='45088' id='9' is-fixed='true' name='Top 10 cities facing loss ' w='50877' x='48947' y='54211'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{846B821D-686B-4488-BAA8-8B65CDA736B8}' />
    </dashboard>
    <dashboard name='introduction'>
      <style />
      <size maxheight='550' maxwidth='1000' minheight='550' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97090' id='3' param='vert' w='98400' x='800' y='1455' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='26909' id='5' is-centered='0' is-scaled='1' param='C:/Users/DELL PC/Downloads/logo_small.png' w='20100' x='5200' y='2364' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='20727' id='6' w='71400' x='23000' y='2000'>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontname='Google Sans Text,arial,sans-serif' fontsize='26' underline='true'>The Sparks Foundation</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='8727' id='7' w='46300' x='35100' y='17455'>
          <formatted-text>
            <run fontcolor='#f17b79' fontname='Google Sans Text,arial,sans-serif' fontsize='11'> (GRIP)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#f17b79' fontname='Google Sans Text,arial,sans-serif' fontsize='11'>Graduate Rotational Internship Program</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='14000' id='8' w='70500' x='3300' y='40364'>
          <formatted-text>
            <run fontalignment='0' fontsize='15'>Name : Saylee Laxman Sawant</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='15'>Domain : Data Science &amp; Business Analytics </run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='35818' id='9' w='74400' x='2800' y='55455'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'># TASK 3 Exploratory Data Analysis - Retail (Level - Beginner)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='12'>● Perform ‘Exploratory Data Analysis’ on dataset ‘SampleSuperstore’ </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='12'>● As a business manager, try to find out the weak areas where you can </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='12'>    work to make more profit. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='12'>● What all business problems you can derive by exploring the data?</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='11' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97090' id='10' param='vert' w='98400' x='800' y='1455'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='20727' id='6' w='71400' x='23000' y='2000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#f28e2b' fontname='Google Sans Text,arial,sans-serif' fontsize='26' underline='true'>The Sparks Foundation</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='148' h='26909' id='5' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/DELL PC/Downloads/logo_small.png' w='20100' x='5200' y='2364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='8727' id='7' w='46300' x='35100' y='17455'>
                  <formatted-text>
                    <run fontcolor='#f17b79' fontname='Google Sans Text,arial,sans-serif' fontsize='11'> (GRIP)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#f17b79' fontname='Google Sans Text,arial,sans-serif' fontsize='11'>Graduate Rotational Internship Program</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='14000' id='8' w='70500' x='3300' y='40364'>
                  <formatted-text>
                    <run fontalignment='0' fontsize='15'>Name : Saylee Laxman Sawant</run>
                    <run fontalignment='0'>Æ&#10;</run>
                    <run fontalignment='0' fontsize='15'>Domain : Data Science &amp; Business Analytics </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='35818' id='9' w='74400' x='2800' y='55455'>
                  <formatted-text>
                    <run fontalignment='0' fontsize='12'># TASK 3 Exploratory Data Analysis - Retail (Level - Beginner)</run>
                    <run fontalignment='0'>Æ&#10;</run>
                    <run fontalignment='0' fontsize='12'>● Perform ‘Exploratory Data Analysis’ on dataset ‘SampleSuperstore’ </run>
                    <run fontalignment='0'>Æ&#10;</run>
                    <run fontalignment='0' fontsize='12'>● As a business manager, try to find out the weak areas where you can </run>
                    <run fontalignment='0'>Æ&#10;</run>
                    <run fontalignment='0' fontsize='12'>    work to make more profit. </run>
                    <run fontalignment='0'>Æ&#10;</run>
                    <run fontalignment='0' fontsize='12'>● What all business problems you can derive by exploring the data?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DB075145-587D-4E06-AFB2-BA00F205A8D2}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Profit Ratio By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D5100CD0-29D8-44F3-8DEE-9DF514AFF4A8}' />
    </window>
    <window class='worksheet' name='Loss In Sate By Category'>
      <cards>
        <edge name='left'>
          <strip size='136'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A39C026D-F10C-48F8-9A95-49B694A1FBCE}' />
    </window>
    <window class='worksheet' name='Profit Ratio By Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[:Measure Names]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9378F8A4-42B3-40FA-9BC1-32D23DC0F623}' />
    </window>
    <window class='worksheet' name='Profit Ratio By Region And Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C71309F8-937C-4C08-9C8E-E636BD71B2B1}' />
    </window>
    <window class='worksheet' name='Profit Ratio In States By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E059A12E-7B1A-4774-B2C0-663B5AF6C133}' />
    </window>
    <window class='worksheet' name='Top 5 Cities By Region in States Facing loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:State:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{078BAAA4-ABD7-40E9-9981-2506D85CC8EF}' />
    </window>
    <window class='worksheet' name='Profit Ration in Central Region By Categoty And Subcategoty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Region:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A56A8EF-8CC5-40CA-A3FF-BDEFC545B8B1}' />
    </window>
    <window class='worksheet' name='Profit Ratio By Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A01B183E-CDF1-43C7-9C7A-CABF42903B6B}' />
    </window>
    <window class='worksheet' name='Profit Ratio In Segment By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0ED83383-F2B2-4226-A3BB-AE7F3D305D77}' />
    </window>
    <window class='worksheet' name='Profit Ratio By Categoty and Subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{229022A8-77B3-419B-8A3F-4D73F0A76D7C}' />
    </window>
    <window class='worksheet' name='Top 10 cities facing loss '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Country:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok:9]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_930837811425505282:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A4E9C7F-F67A-4C97-ADBF-4860D1C50400}' />
    </window>
    <window class='worksheet' name='Profit Ratio &amp; Sales By Shiping Mode of Each SubCategory'>
      <cards>
        <edge name='left'>
          <strip size='122'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:City:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Ship Mode:nk]</field>
            <field>[federated.0keci5n0trro9914h83n118d4gxw].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{756FDBBE-9D54-427E-A4C0-B767477B3963}' />
    </window>
    <window class='dashboard' name='introduction'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{0E35875E-FC19-47F7-B7CE-7266B9F87A01}' />
    </window>
    <window class='dashboard' name='BY STATE'>
      <viewpoints>
        <viewpoint name='Loss In Sate By Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Ratio By State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{837474E6-1047-4971-9EFC-BCB0403BCE49}' />
    </window>
    <window class='dashboard' maximized='true' name='BY Segment'>
      <viewpoints>
        <viewpoint name='Profit Ratio By Categoty and Subcategory'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Ratio By Segment'>
          <zoom type='entire-view' />
          <highlight field='[federated.0keci5n0trro9914h83n118d4gxw].[none:Segment:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit Ratio In Segment By Category'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0keci5n0trro9914h83n118d4gxw].[usr:Calculation_1915437276740227072:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.0keci5n0trro9914h83n118d4gxw].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 cities facing loss ' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BAC6FDC4-EC61-436D-9C9F-16C63B1AD186}' />
    </window>
    <window class='dashboard' name='BY Region'>
      <viewpoints>
        <viewpoint name='Profit Ratio By Region' />
        <viewpoint name='Profit Ratio By Region And Category' />
        <viewpoint name='Profit Ratio In States By Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Cities By Region in States Facing loss' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C346005B-913D-4D54-A513-13085B605A85}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BY Region' width='192'>
      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
      AS9b/lZnRpPlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='BY STATE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='BY Segment' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Loss In Sate By Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio &amp; Sales By Shiping Mode of Each SubCategory' width='192'>
      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
      CEAwp/n/AfTe75A849hUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio By Categoty and Subcategory' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdr0lEQVR4nO3d2W8cSZ7Y8W9m1n2wiiyyeN+ixEMkJUotqaVWn94Z9yxmBp61F1jATzb8
      YMAvfjNswP+FYcAGDBtYjL2DHXu843G7d3tnuqfvS6JEiYd431ex7jsvP0hiN3WQzFKJZLPi
      AzQaJWZG/CqqfhmRkZlRkmmaJoJQoeTjDkAQjpNIAKGiHVsCJBKJ46paEHYdWwIUCoXjqloQ
      dokhkFACk531RSanF1D1lzCHoqf59vbEw5pMg82VOSanF/ZsEotGUHVjz79lEtuMT0yRKWiH
      rkokgGBZcvU+v/3DHXQtT1H77ks4f+t97q/nXrj8nalbZNx1ABRSy7z/wS3U1PqebT754wfE
      M+ruay27w69/8x6arpPNF3f/3di8x2+/WnxuXbYXjlaoOAv3Z+i7doOBrjq2527zn/76PXzd
      V6je+JQFv0ax1eT9r8YIdV2jy7bEetakaGulSV4lklOp6xxg+ssv6LgwTGwjwpsjDTzId/LO
      SAtgcmsuwas/rgbA5gziNHeY3qxF/fDXhEf+jFsf/hqpmOaD//MrckqId18bIhdfxN80wOD5
      fszMFv/lP/5nNnJO3u518dEtlU5HP++9/ymmr54fD9bx1UKUZMYUPYBgXW1DgIXZFQr5HGO3
      Jjh7YYhUPEXf4ACvXn+N7aV5zly6yUhvC0sxjV/85CZSscCO5ubnP32bzYU5fOEu3n3nTXob
      HLz/1TKXBpsB0HMR8vZqPDblYWWmxNs//6e0FSfQNZ1iIUUmr4PDx5t/8mPkdJSd6A6SM0h0
      Y5lCscDq3DhKqAsfKTp6Bui/9CqezAau5n5uXh1mZWaDf/CLn1HjkkQCCNY1nr9Jf1Wcv/3j
      13QNnsfU7Fwb6adz8AZbk19x8Uc/w5bYpGhIXOlr4Zd/9TeY/hBvXDrD3310nx/96buMXOxD
      wqSjJYQZbCdolwDYWFygvrUDWXpcm8ndLz5gwz1Ie3cfY998y7m+fgZ7uvn8k0+5+if/kIHB
      YTq7+/jRlXbee+8D5JpuQm6JoVeu42vtpzk/h9J9nd6gRjKrcvH1i3zw33/JTt6GdFxXgre2
      tgiHw8dRtXCEVmfGeLCWZuTKZQIu+94/GirjY+O09A5Q5bQBJhPffE544Coht/LSYkpuLXHr
      /jxnBkdEAhy3bDaLx+M57jAqlhgCHbN0On3cIVQ0kQBCRTt106CFnWX+/tsJqqsbGBkZwrnP
      UDIZWUWuCpONpQjX1xxdkBUmujbD7YklDNnOlWtXWbj7OUptD4WNcXxNPfg9AZrqg8/cd2P2
      HveXI3irm7g2fPaAmmLcvpWkpcVBoKYeh+3g4/upSwBMcHv9BAMBFhdm6e5oYX52HVnJE41l
      CfkcrESiOKuaaK8yyOcW+PLTu1y4cgEkHw0Bg5zhZGP2AVKgDkc+xnZOYmRkGK/z9DXXUdiI
      pLjxxlvokXlm52eYWNikx+ZnYn6NV1q70QoG63PjPFje4Wx/P6vTE0hVjVw8341pmjjdfro7
      mpmZmaE1KLOmhdiavU1OVbgw3MfY/Uk0U+HyK2cwDINcJoXb7eL22DhKoIEWd56J5R2GLt8g
      5N17RDyFQyCZusYWmhtryaSSGIZOIp4incrRNziEbEhcePU1qpQiuVQSb7iV80MX6WkOkkjn
      yOfS5PIFNNnHQLOLO7PrFDNpMkX14KqFZ5IlE003UDUdd7Ce4eELXLo0Ql9/P+faqsmk0qzH
      VW7cvIGxM8tKNEcqGkUFwh29XOjtYHpygmQyiZpNkMppBJu6uDTYyOZqhJq2fs53hYnFH55P
      ZdJJtuYmWEkUiEZjKIqCZGqks0/ff3bqEkC2O6mpqabK76Ux6OKzz74mh4y/OoTXacPp9WFX
      ZLw+Ly6vD5tsJxddYHojhxlf4N6DVWxOB7XhWhRfHV1hP3anC7vt5U3LnXZtLQ3c+vxj7i4n
      aakN4PG4AfD5fIANj89LQ8DGJx9/glnVTNCj4PF5kYHI6hzfjt7D7qnCzEa5NbWG22ay+OAu
      t8a3aWqqYm78FhOLUUI11fh8LjxeH7Vt3QTtJj6vF1OSkCQZWXp6wlNMgx4z0Q7WGcU8kXSe
      cE0QCgk2cnYagqVNJe8Z1BYKBXRdL0uQB1FVlWw2eyR1nWSiHUrjczketZudKgclt+GeBDAM
      48gS4CjrOslEOxyvPQngdruPrOJcLoff7z+y+k4q0Q7H69SdBAuCFSIBhIomEkCoaCIBhIom
      ru2fEH+4NcPn9xYOvX1d0Me/+Nm1lxdQhRAJcEKMTq/yy7+7fejtzzTXigQoAzEEEiqaSACh
      ookEECqaSAChookEECqaSAChookEECpa+a8DmAbZbG7PU1SmaVIsFrA7XN9b8UsQnvbRnQWm
      liOH3v6dkS66m0pf0KDsCbCzNMW9lRg2h59rlwdRJFAz27z3/ke89u4/oVasASXs48PReX7z
      ycSht++oD56sBNhIabz26qs8mLiDqpnINpOZ2TV6z3UAoOs6hmFgGAbFYnH/wiqArusUi0X0
      J9a6P8jDXvX0tZ9hWGsHTddeqB3KngA2QyNTVNFUE1mG/M4SsysbqKktOtwd1HbXoSgKsizj
      cDjKXf0PjqIoOBwOFMXa6ZgkSaey/WTZWjvYFNsLtUPZE6Cru40vv/yM2vY+tNQWBU8LP/3T
      DrbX5nDV1pW7OkF4IWVPALs3xGtvvLn7+vGQv66pq9xVCcILE9OgQkUTCSBUNJEAQkUTCSBU
      NJEAQkUTCSBUNJEAQkUTCSBUNJEAQkUTCSBUNJEAQkUTCSBUNJEAQkUTCSBUNJEAQkUTCSBU
      NJEAQkUTCSBUtPIngGkQj+6QK2q7r9OJONF4Et04lt/kFoTnKnsCbM1PMDG3wO3RcXQT0Aus
      rKwwOz7G0nai3NUJwgsp+0Px21mTK5dGmB6/i6qZKHY3AbfM2rZJt9ct1gV6glgXaK8f/LpA
      dqNIKl+kUNSRZTA0leqWHoaUGTajSWraxLpA3yfWBdrrqNcFKvsQqKuni/FvvsRb14aW2iKe
      yTEx+jUTqykaQoFyVycIL6T8K8O5g1y/+fruaw9Qc+V6uasRhLIQ06BCRRMJIFQ0kQBCRRMJ
      IFQ0kQBCRRMJIFQ0kQBCRRMJIFS08v9KpCAco7HFHR6sH/6mS5EAwqkythTj/95aOvT2Yggk
      VLRDJYBpaGRzeUzxPItwyhxiCKTyu7/6S1KaScPg27x1oeOlByUIR+UQPUCWdDHIW69fIrK8
      +fIjEoQjdEAC6CTiJue6vfz9p5NcuHT2aKIShCNyQAIYxCJbxOIFPG4Hsah4plc4XQ44B7DT
      caaZfNHN2701TEztHE1UgnBEDkiAIh/9za/437+fo7e3nubz79B3NHEJwpE4IAEcvPGzvyDU
      Mo232oc3UHtwiabO1uYmnmAtPpcDMMkkYySyOuFwLTZZKkvgglAOh5gGLfLlH36H6a6h/vwN
      fvr6wL5bb8yOs5qTKCxtc/WVYRQjz9LyBno+Qw6F7oaaMoUunDSZgsZ/+NspS/v8+bV2Oup8
      Lymigx0iAWw0dHQTiayRSWYO3HqnIHHx/AAPJh6tC2Rz0dPTyfT0HCG/V6wL9ITTtC5QvqAx
      u5mytE8yW6BY/G5ZkxddF8gwdEv7H+peoHBLL2+/+xPsTveB2zr0IrFsnnz+4bpAmCrTD2Zp
      O9uH16EAiHWBvuc0rQtk16zvY7Mpe97Hi64LJMuKpf0PUZvJ3T/8L/7r//g1n92ZO3DrrnM9
      zIx+Q6CxAy21RSyZYWcnwteffczytrWjgyC8bIfoAbz883/z7w9doOL0c/XGzd3XHuC1N960
      HpkgHIFD9ABFItsJMIpEIuJCmHC6HNAD6CxMfc1v35vj+s0eJHsDtbVieUPh9DgwAbIFJ7Ve
      jenpBVp7w0cTlWCZbpiMLcct7dNZ5yXgOVkn0kdt3wTIp9IEw82M3KihsaUWm8N1VHEJFqm6
      wX/7dMHSPv/s9U4GRQI8n5ZP8Pv/9zumHmQZuthJy7nLvDrUeVSxCcJLt28C+Go7+Md//hdM
      TqxgcztpaWs8qrgE4UjsPwskSbg8Hu59/TnL07f5/ZcPjigsQTgah7oQZiLjdDowxI/cCafM
      IS6ESQxdvkaoMUx9g5gFEk6XQ914cfuP7/H5t7e4N7P6suMRhCN1iB7AwVs/+Qkr8TzN9eJW
      ZuF0OUQPkOEPv/8apx7hI3ESLJwyh0gAiXRsg4mZBUY//lvG5rZeflSCcEQOMQTy86/+3b99
      +ZEIwjEQa4MKFU0kgFDRxPLowq5vlxNMb6UPvX2N18GPeuteYkQvn0gAYVckXWAmkj309k1F
      aw+gn0RlHwKp6R0+/uhDJuY3eHjjhMbyzCQTc+IimnDylD0B5uaWuHDtOlpiHVU3AYlAbSOS
      fvgjiyAclbIPgTTZhsdux2aXMAxAUfD5PEjbD/8u1gXaq1zrAqmatf0BdE3fU4ZucU2ep2Ow
      vi6K9kQMJ3JdICsa/DY++ewz7K4AbbkoSdXN8tQ4syvreIP1tNRVlX1doF+NrqNbuFP1SluQ
      7lpPWep+UeVaF8iQrI/HlSfW5FEsrsnzZAw/xHWByp4AobZzXKnLY3O6UDAwkek610fH2T7s
      z3iksqgbFC0cvSQJvI69Ya/Ec+gW7tQeKJbwSQmnUvlngSQZt+fx0fVhNrs93udufnctxUdz
      0UMX77Er/MvrbS8SoSDsEhfChIomEkCoaCIBhIomEkCoaCIBhIomEkCoaCIBhIomEkCoaCIB
      hIomEkCoaCIBhIomEkCoaCIBhIomngkGskWVnIVbpBVZIugRv5ZzGogEAFaiSaY2LNyS7bDx
      Tr/4pZzTQAyBhIomEkCoaCIBhIpW/gQwVOYeTBJN5Xf/KRlZY2ZhzdJzu4JwFMqeACsP7lN0
      eJieGEczTFCT3J/ZREtusBpJlrs6QXghZZ8FSuh2+tpbmc7FUXVQsgn8zZ10+XLMpvPouhfD
      MNA0jVQqRa1d42rYBpjY7fbdch6vH2Sz2ZAkCXi0ZoxpkEgkdpfPME2TK/UPt1GU75bEUFUN
      JLDbbE+VGVQe1v24TIdepCvoRn5Uj2maqJqGIsvPLNPldOzur2kapmEQnP9LS+2ktb5DwdNO
      KpXC7XZzvb+ZkPf6U+/ZNE00TUN+IhaXXSYWi2F79P50w+Td3ipMc287GrqO/mSZhoGm6/hl
      dfd9ADS7NNwtThTbd/VomgYm2OxPt2OVx76nHfMFlV9cqP3eZwOapiLJMrbvt+Oj9YPsNhtV
      Np1UKrVb5jvDLZxt9O+Wqev67jI6pmnu+S7ouk5byLUbg2manKuzU3Wl6YnPTUWSpN22evy+
      DNNEMk2zrAOTubFv8bb3sjI1ydClEexqjC/ub9NRbZJ119PVUA3A1tYW4fDp+NE90zQwfvNn
      lvaRLv9r5NbXT1U7/BCVfQjU2T/A6vgdGrvOoSa3iOlVdIVgJS3TFg6WuzpBeCFlHwJJiouR
      a9cfvfLhAWg/hzjGCSeRmAYVKppIAKGiiQQQKppIAKGiiQQQKppIAKGiiQQQKppIAKGiiQQQ
      KppIAKGiiQQQKppIAKGiiQQQKppIAKGiiQQQKppIAKGiiQQQKlr5l0Y0dSLbEdxVNXhdDx/O
      LuYzFAwF/6ldT1NC/vlfW9xFHHtOgrJ/CptzE8yvbXDn7vijdYCKLM4uMjO/WO6qTgxJkpBk
      xdp/j1Y3EI5X2RLA1FUSyRSbWbg0PESND1TNBBx0n+vB4xBHPOHkKdsQyChmWFjeQFYLxHMF
      8nkd+Rnf+cfrvxiGQbFYLFf1P1i6rot2OEZlSwDFHWR4IIieT/L1N18R7hpAS22RUbzM3Rsl
      ms5h99XS1Vi9u9CRw+EoV/U/WIqiiHY4RmVfGOuwxIJQD4l2OF57eoB4PH5k3fH3l+Qr1feX
      yiuFYRi7y/gdVwynoR0eH0OPM4ZS99+TAMHg0a7c9iJHPtM00XV9z3qPVqmqumcdzeOIAV6s
      HR6fTx1nOxiGgWmae9bjPOoYSt3/RE/NaMU8xX3WVD84401yuTzPK+EwH5hWzKPuE8NBZZjm
      /jHsS1eJJvbvIZ5cFPjZMRjk86W2g0l0Y5GNSIJEKvPcGA76LExDJ58vlPxZHNSO++5vaKQy
      OUxDI53J7vnTyfyNMD3Pl7fGKGYy4K7i5tWRpzaRJGnfLnd97j6razvENJOzQ9dor3E+tc2+
      H5qW4YvRSYqJGEogzI3LQ8+MYT9LD+4S2Y6xrSkMDl+hKWj1ZFdn8u4YfReG8TidOB1Pf1wH
      xTA7PkoqkWSjKDMycpWw/+mj5L7tUIhzf/Rb1Np+HLLOayMDlmOYvHuLQi7DWk7i2pVrVHue
      fh/7xpCP8Nn4BulUnKELV2gMPN2Oz93fNMnF1/liYovLPfWMLUZ5/ZXvPsuT2QNICk4jgy/c
      gd9T2gyJy+1mJyfR01qDXSnhbUo2HGqSqsZufO7SYnB73ERyNs62BLEppYyPFQJunXv3J5hb
      2SwpBq/HTSRv50xTAJtcQgw2D9WBKlLbawSC1SXF4Pe6iBacdDUGdpegt0RxoWQ36WkOYivh
      s8yk0+SzaRI5g5HBvj1/O5kJYJqYzloG+9oZPv/0EecwnG4PAY/C6nqcyMYahtXJLknGYaok
      ixqlzpM5HE6i6TQ2TUcq5ctn5InvbFO0+YhGd0qKoVjUGLp0ge7uAaq9JXT4koTkDFDjs5Pc
      XCNVOPzPyT7mdDrYSadRdJ2SzpNlGw41h62U/SWJ2uZO6rwe6pua8Tj3tsHJTABJRspu8fmX
      3zC9tFFSETub64S7B+modTI5M0Mmr1srQFdJpLOkEjFizxn7HiQRj1FQC8TicQpFi/UDyA78
      Pi/JrRWc3qqSYgj4HXz9+efcuT9FrpQYCikimodXR/pRkyvcndu2XEQkGsfQcuzEEqi6YT2G
      YoZ0ofiwHdUS3gMyoaCTyftjzK/sjf9EngPE4glqG1tx5rU9v/BiRV1jK5Pzi6DJ9HU1Y7db
      zHW7mwtXbrC0ukmopbukGFo6e3nT7kN2+mgMPn0OciDFyfkrb9KUyhGqKW2GzhdqprNToTnk
      3/MrLYfmChB2LjGzuEZdUweekN9yEWfO9mH3BnG4/QQ9Jcz0uGsYvvwqyaJCQ8B6O2qaiikp
      7GxvUF3ftudvJ7IHqAoECYXrCYVCBP2eksrQtAK6ruPyB+nqOoPLZvGtqllGp+bZXFtncmrK
      cv1bK7Pcm5gikcoQi0XJW/gl+l1alo8//YL41hJf3Zu1vj8w92CCu1MzbK/Ps50slFCChNcl
      sbYVBW+YzrDPcglT4/epbmgjE1kkli7hOpOhs7K8SmQ7gm5YG48aqVX+53sf4wrUYdqcdDTW
      7Pn7iUwABZ27X3zIh1+N8tWteyWVkYxFCTS003v2DF5nCb2IYscr5alpPUtNCUkYbumm/2wX
      bqcDny+A+xkzOAcydVTNAGQ2lufYSeasx1EXxqtobCVNgr4Sjr75GPOLi5iuEKlkaT9y2NJY
      x9z0FCnVgd9dQgyFGFHdT9CeZiNuLYllfxP/6N2bGNkEdjQW1qN7/249mqNgorgD1Pg82G3W
      z5pM08RfFSSyPM3tO2Mkc6r1ECQ7TQ0NJHdWMGxu6/sDK3MPwFeHGltg1eIHB4DNQ2eDj+n5
      ZcKNrbvPVxzW9toiC2vbtLe24fJ4KOls3umn/ewQtfY8taGag7d/BlOWUSTwVQWQSrkiYvPi
      KGyxuJ1jc20Zw1IvIGF3euk408Mbb75Naziwt2jr0RwB2UH32V5yRR2Hx/rJn1lMkyzKeD0u
      kG2lXaJXM0xOTqBW95CJ7wCtlnbfXJphLZJAi89iMzSqrQ7BAIopVlfXcNScQTI0XBZ7kbqm
      dna2Ngm29ZNaukMyp+N1WDwP0IusbSa4euUSSom3OqytbtJ6dphaXwnnQQCmRrog4bUbtHd2
      IJcyo8azLxqezB5AzzN6bwqHy4XDZv3ETXb6aW5uZnBwkMGBPvyuEvLc5qT9zAA1Sg5/wPr8
      d33bGa5du0qNR0Zx+XGX0JNh99DWM0C1nKWqqrST4PbODjaX58ga7hKnQR24pQy3b48yv1ba
      VGxdKMDMxD1G702SL2UWR5LA0NF1kxK/+8918nqAYoaxyWmKmTQLi0tU1dRT5bM+BFmfuc3k
      pk5jXZDW9g7r5wGmQU5TGBo6z8zimuX6ARamJ7izEOFqVzVp1cRv5W2YGtPj90moNvqHR3Bb
      ncV6JJtJoWs6Hq+vtCGQYsPj9lLQDZQSZ+S8gWoK86vkCxoWz2ExTRND9vD669fQkHHZy/uV
      PXkJoMhUBZsYHLqAaagsrW5ZLiK6uczy+g6GVNrc+UMmO+vLuGwqW3GVcyWUUB0KM1iAqAo1
      VnuAxCLLxRDXG1LcXojy6tm6EiKAeDRBQ3svTdWlzaZRiLOWVrg51MJnE0u0hQctFzE9M0ei
      AF0ByKkGHgvDMD2XYHJu5eELxUFXVzceZ+k33T3p5CVALsrsRoa21jCmrjO/tER7a7OlIqpq
      6hm4GEDXdeLJLPYShlHIDi5duUy+UKSu0XoPdPvOHS4ODxOsbwFKuFVYsqHldljYypNK5VgJ
      2GiptzYUM02TmlA1D2bG2XC66T3Xa/3L46ymo2aD8ZkVerp7rO37SEd7J4GaOLGMabkntnmC
      nB/wszR1B08ggPmCt68/VX5ZSysHXyMdvjvcGh3FUIv0nDtvuQib3cH6/H3mFyLoXidFZzVn
      whaPgIbO0vwCyBqGK0xvR4Ol3aNr83yRezRtqTgZOH/e2hRgoJ0f3WgHoNdSzd/R8ilyug2P
      ywk2e2m3IahZTF8dg10+FjaTUO21tns+gwqYkoNglR0FE7AYSH6HhYVlWls1Mo46vKHyrS5y
      8hIAma7+i5imAex/x+fzmKZJdV0jKzGJniYfTquzD8U0dydmKCS2mNrWuPpKveUYgg3tXLp4
      0fJ+5VTIptlJFqj2uYjmZRxWzyNMg+WZ+3wxtUOyrRbDG6bTYgy6YSDLNtxuN8glJqGzmsaG
      MJG8g/MlXAnez8mcBQIkSS75CSOzmCaR1fG6ZbaTKnbZ4pmXw8fQ0CDBUD1DZxoxrR6x4Ni/
      /ACj96ZpCylMbRdwqduWLyKZpoG/vpu3rl0gUFNPT3uT5RjSiRjRWIxoJEIilbF8EgyArmG6
      q6mpCyOX+QneE5sAL0J2+glVuVBkG26Xk5LuRNZyrMVV+vvOsbayUO4Qj4QsaWxtbpNLp4gk
      C5anENX4IuNrBdbnHmBzwNjUnOUYahvb8Ep5soZEdHuDfZ4tej7FgVMx2dlcRy0pg57vBA6B
      yiOysYKjup2uBn9pz5ravJxtrmLs3gQ95/rLH+ARuPbaW5imSdej11bbQfHWoEVGyfnqCFd5
      iCRKuJ8JiCcz1IQ7iGa2Wd1OcKbJ4nUVU8Phq+FcuAVXidPBz3MqewAAv9/PxsIkY/cnSOdL
      +OBMnWg0gd2uEI3Fyx/gEZBlGUVRdv+zOqRUnNXcfPMNrl8+j8MXYri36+CdnqGtq5t8fJtA
      XRt2SrgtpZjkzvgcmWzO4m0QBzu1CVAoqDR39TI8aHH25TG9wE7WpLOjnWiktGcSToOH52IP
      /1/qLQg7a0vksbO5sUZtba31AmxOyCfY2o6U9jzBPk5tAnh9Hmbu3WJ07B6pUm6Gs3sYONPI
      6tomA/3Wp2KF72RzBew2G2YxzeyytYOJmo6ynXMydHGYM611lm+HPsipPQcwkanye8hmstZP
      vPQMn/zxGzxeD3mjSFJ3UNtfWvcvQGffIKlMntqqIWwua88T5OOrLKmtpFZm6KrzoNV4qCql
      R3+OU9sD+ELNXLt2jbYAxHMWu83EGlrdWUyzQF//EOlE5OUEWQFS8Qiry0tMj33N7dkdglXW
      niizu/zkIkuYus52WsdXyrMd+zi1PUB6Z5V708voukl/p8W36Q7h09aQbC7WlpeprbV2FVj4
      ztLsJGnDjdfjwhluxW5xTtpV28FrJZw2HNapTIDZ+Xm6W+ppaHPQ0VTCTWTuGi5fKO3hD2Gv
      /pEbGLpGfHuVuc1VCqofp718N7O9qFM5BFpeWQE1w8K6GLocN0mSUGx2Qo0dvHJh4ER9+eGU
      JsC5jiYmF7epduhMPpghU8JaNkJlOJVDoMbWbhqPOwjhB+FU9gCCcFj/H7HW9FxZqk0/AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio By Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE10lEQVR4nO3YzWscdQDG8Wd2p5Ps7iS0u2lsGqq1sSkmfUkRXxoRrHor1FM9qKf+BXoQ
      zx78Azx6F/SgFwl4klBBEUVtaVMSFN28tJpummSbl2422R0PkuJqPSXuEJ7v5/TbgYHn8p1l
      Jpienk7y+bwAR2E+n1epVFKSJGlvAdoulKQkSfTBR+9pbm0i7T1AW4Xbh7m1CX238FmaW4C2
      y6Q9AEhTSwADvafU03VYnfsKOnf8ggIFOnv0vLKZ8KE3/9d1YK9oCWCzUdfZx17U4weHdWHk
      sjqjWMP9zypJmspFscJspEyQVS6KlYtiXXrmLeWiOK3twI61PMLnqzM6/+QlZTOhfiqPa/DQ
      iBZX5/X84EWd6HtKm426bi3+osMHBnRt5iudOjKqydvf6+rMlbT2AzvS8g9Q36qpkTRUivv0
      Y3lcr5x8Xb9VJnT60Re0WlvWfHVG03cnVdtc1cbWfV2f/Vo35r5JazuwYy0BJEpUrtzU/fqq
      /lguq9DRrfLCTV2bvqL9+YNar68oF8Xq6iyqEHUpCP56RwD2qqBSqSTFYlHvfPgan0Fhh8+g
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsBZuH4od/RroejrNLUDbPQggyh1QIXM0xSlA+z0IoNZcU7W5kOYWoO14B4C1lgA6wg5d
      Hn1bF8+8obij+6E3dHfuVz6K2zIO+L+Ff/8RKKPfq7P6YuJTZYOsRo48p/pWTVPzNzTUN6KN
      rZoGe09qY6umLyc/VzNpprUb2BXhPy8c7x1WNhNqfGpM+X0FjR57WY1mQyceOa3xqTFVuxZ1
      r1ZVkiRp7AV21b/eAX6+M6Gx65+oJz6kfEesOyu3tVJb1tXZb3Xu2Etaq69qpbasRASAva8l
      gEbSUC4q6NUzb0qBVIhiLa3fVSaT1VDfiGaXftWtpbKe6B1SNsimtRnYNUGlUkmKxaLe//hd
      TW38kPYeoK34DAprBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABr4fahJ+xPcweQiqBSqSSlUklJkqS9BWi7cH19Pe0NQGr+
      BI762cBOgLwiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio By Region And Category' width='192'>
      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
      MtHpdCQlJcmuj5h3ogbAGwpiS7KRoOiIoGFyqA1nKJeSopX83V++zuWz5wjHbBQhRHxFPQ9Q
      mOng6IcfkblkJVUnPube3SYWFCyn29nBrWtX0CXlzNoARYjZFnUMoCgKoVAInV6PEokQiYRR
      FNDpdYRDYXR6Azrtowi4XC6sVquMAeaAjAFeTNQtgEajwWD45iCsTjflKIMuVhdkCDFHVHMp
      hBAAwXCY4433Hj+WAAhVCUciXHd2PH6smmuBhHgaCYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1
      CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFC1qAFQIkE6
      WltweYOAwuhAN23OPiKKQk9HC8MT3ji0KcTsiPqm+OaayzQP+piob+PtQ9vp7+3jbt1NBotX
      8rDfjX+ilp8ffoMZflifEHMiagC6hofZWLmHq0fOE0TPkuIiWtvaGGsZZv3+XdSd/4yhoRFO
      nTyG0Wjk7bffjkffYg4pQR+R0bYZ19GYk9EmRf9c4NkUNQCJegMDg0P4rXram+7ibO9g7fa9
      hJou0tw1SCioIy0thXfeeQeXyxWPnsUci4y2Mvlvb824jn7ZQRJ2/6cYdPTioo4B1ldup72+
      lsqXd6BVFJTAJKePHyO8+CW0bTWsrXwZnUb2f8T8FHULoDUls+/QoUcPkkspWlr6+Gf5+16d
      tcaEiAc5DCpUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRN
      AiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFQt6l0hhIi33r/9e4JO54zr5L7/
      OzRRbtkjARDfP4ry6CsOZBdIqFrUAEQCLk5/dpT2gUe3PQxMjlFbfx8UD5+99x5VNxuJT1aF
      iL2oAbh16QJ5q9Zw+VwVYaC3p5+6u9Uw4aTFbWFFUS5yY0QxX0UNgCvgJz09DVtISxjIX1JC
      gl4LiQXs27qIz49/wfDIKO+++y7Hjx+PQ8tCxE7UQfDCtBQuVX2JJtPOjctfsWXLVgBCAS/D
      I6MYzAmkpMjdocX8FDUAJeWVWLv7SM3MJuTzALB792toDUaycgopXbcQrewDiXkqagA0OiM5
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio By Segment' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAF+ElEQVR4nO3aW48TZQDG8Wfa6Xa7LMthXSgsuBZFQEFJWAwiaDygxsiFd34XP4ifwhuJ
      iYkXGoUETMAlQGA5KrsCe+72OJ1OO95gRFOyGrQkPv/fXd+3mbxvMv9mZjpBmqapAFOZp70A
      4GkiAFgjAFgjAFgLew1+8e2UpqZn+70WoO96BnDh2oy+/OFSv9cC9B2XQLBGALC2ZgCZTKAg
      kIIgUDYT/KODB0Gg9UN55cKsJGkwn1MuzKqQzynM0h6evp73AI96fnxMy5W6BgdCbR5Zp0u3
      7v3tgx8/+Lw2DheUHwj11Zkr+ujoy7pw7a6OHCjp7OWfVW+2NLdcfaINAE9izQDCbKCTx/Yr
      PxDq/LUZnTy+XxuHh/T9Tzd19JWShgt5lWtNLZbrWq7U9eKzW3Rheka3f13SQJjVlz9c0uS+
      ZzW5d6cmipvUbMUqbR/Vxeuz6na7+uDIXhXyA7oxs6CXSkXdnFnQT9d5AoX+WDOApJPq1OnL
      GhwIVRwdUStOdOr0JR3eN6GrP8+pFSe6v7iqfaWi3nh1l8qVpoYLeaVpqjDMKJfNaP3QoK7c
      vq/VeqQbMwuq1iPNr9Q0PrZRzVaib85N69P3DynMZrSukO/HvgFJf+MeoNqI1GonarbaWlip
      KWq1deLwXk3dmFW52lCl3lScdLRYrunMxdtKul1VGy1J0tU7c/rk7YOK4rZWa02Vq00lna7m
      yzVFcVtzyxW14rY+PrZfU9dn1YoTVRvRf75p4HdBr7dBP/v8FP8DwAKPYmCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGAt7DV45NBuDY+O9HstQN/1DGCq0tDXC6v9
      XgvQd1wCwRoBwBoBwNqaAeSyGb23e1zvvLBducyT9bJuIFTwREcA/l09b4IftfuZEV2bL+tB
      taHBMKsTu8Z14ddFddNU4yPrtNJsac/YRk0vlLXUaOlYqajzswvqplJp83o9qDR0cHxUF+8t
      6cM9O/XLSk1n787r6MRWnb07p5Vm3I99Aj2t+ZNeCEOtRrGSbqrXJ7bqu1v39cq2UR0obtZy
      s6VNQ3mduzuvPWMbNLljTKfvPNDkjjEdKG7SfK2pMJtRLpPR4Z1b9OPMgr69dU9v7dqmDYWc
      jj63tR97BB5rzQB+Kdf07gvbdbxUVJR09OauorppqtUo1my5rjCTeXgiB6rHbR0rFZV0u1pp
      xrpXaWjb+iHV40TdNNVQLqvXdo5ppdlSJWrr9lK1D1sEHm/NS6DFeqSvp2eVCQJFSaKhXKgo
      6ShNpU6aqhG3dW6potUofniSh2omHenh/LmZeQ2GWcWdrtI01UA2qyjpaCgXqtXp9GOPwGOt
      GYAkRckfJ2otTv40d2Wu/KfPf53vdFPVHxlLusnD77X/2UqB/wCPQWGNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGAt7DU4uWNMhVzPKeB/5TebHZMp951idwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio By State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio In Segment By Category' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Ratio In States By Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Ration in Central Region By Categoty And Subcategoty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 cities facing loss ' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='179' name='Top 5 Cities By Region in States Facing loss' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='introduction' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd5wV1d3/3zO337v9bu+NpfeldwKiiIo1mmg0JuZJniQ+qWqiJiZPfHzy
      y5OYRGMF1KBiQxDpnaUssLvANmA72+vdevu9M/P74y4LKFFQmtl5v177eu09c86Z78ycz5w6
      5ysoiqKgojJIEa+2ASoqVxNVACqDGlUAKoMaVQAqgxpVACqDGu3VNuBCURQFWQGfpKARQSsK
      AAiCcJUtU/kq85UQQH2Xl49LuilsdNLt8KHXakiOMDAvK5jZGUHotWpFpvLFEK7leQBFUdhW
      1sfy3Hacbt+njguCwJjEIH42L4YIy1dCyyrXGNf0q7Ow0cWr+9twurznPa4oCoX1fbywtw1J
      vmZ1rHINc00LYMuJHlxeP3xOO/9og5P6rvOLREXls7imBeCXLuytrigKPkm+zNao/DtyTQtg
      XlYIOo3mc+OlRxpJjjBcAYtU/t246gJQFAVFljlfX3xKqoXbx0eg1f5rEcSHm/jxnGgM6kiQ
      yhfgqo0CucrKsG/bhqu0FNnhQBsRgXH8eEIWLUIfGzsQT1YUCuqcfFjYxYlmB5IsIwgawi1a
      ZmeGcNvYMMLN6giQyhfjigvA19ZG629/S9e6dUh+/6eO6ywWor7/fSJ//GNEkwmAgIUKOZV9
      vLDPxu8Xx5IeaUArCupEmMqX4ooKwNfWRt03v0lfUVH/2c8U3tNGCIqCIAhE3HorCX/9K6Ih
      0Lbvcvh5q6CLuZkWRsaZ1IKvckm4YgJQFIXmJ56gbdmyzx3WBBAFgeQXXyRs6VKAgXF+jagW
      fJVLxxXrOSpuN459+y6o8APIsoxj586B3xpRUAu/yiXnyvUeNRrE4OCLSnJ2fAUFn+ylxV1L
      r8+GQWMi1pBKkDZUbQ5dZvwnV+Ip+Pi8x3TZj4JtPb76Wow3r0Bj+qJnUVAcDXjzX8ffdBzQ
      oImdjG7ifWhCwr9opufH141r089RxCFXTgCiXk/EvffiKChAvoBWly4oiNC77gICzady+1E2
      t79Bk/MUCjIgEKwLY0bEEmZZl6IT9Zf5CgYvgjkGTcxIUCT8VZtQ5GB0Q2aDICCYg5FrTiG3
      l8GXmItUZBfuj76Lv6MHTfpcBNGNr2QF/oYizF9/GVH/+fNBF34yP3JHGbLWcGVXg4bdcQee
      ykpan38+MO5/vje3oqAzGol/+mlMY8YAUOUoZmXDM3i87kAcAUCh19PF5pY3cckOFkc/oNYE
      lwlN8nVokq8D2YOzbT+SLxXD/N8gaAItaE9pIJ7ccRTvnpUgBKPLfghNZCICCnJnMd4jq5Cd
      djRJC9CPXYLwyQlOZyX+1kY0I76P6bofIgjgPfAknsObkJprEFMScW/8OUTOQhRt+BtPIFrH
      o590H6JBjyJ78RevxF9biKKAGDUB/YS7EY16vIf+jNSroAnWILW3oMv+9sBpr6gABK2WmMcf
      x5ydTfvzz+M8dgzF5wu8OAQBjcFA8PTpRD/yCKZx4xAEAUVR2N/1MR6fu7/gn4uiKBzu2sas
      iFsI0UVcyctRORtfH56tTyJGxiHVbsPfUoPlm8tRHCU4330IRRuFJjIWb87jSO31/YX8rAdq
      TkUTFoZ0ciVupRNNyhQ0Ix4mePof+iM4kGpzkCsOIISkI1r0+PKeRepownzLE/iPPIt771uI
      8ZMR5C58h3YiuxXM8+9HbjuGv7IIPwpowtBN+k5/nsqV/x5AEARCrr+e4AUL8DY24ioupvnX
      v0YMDiZt1Sp0CQmfejvoBD1K//Do+RAFEeHqT2oPbgQ9hkV/R5uUimfjA/gq6lA8TqTj76P4
      RIy3LkMbG4d3xw/xHl+LPOMBNEFBZ5ILwRhveQnP3r/hr1yH/8R7IBrQpC3BeN2vEY39EU3p
      mL++EsGoxbPpe/iq1iN1/hfaUd/FFDkHTeJElI7DOFf/ELmr6hwT9QteQj8sGxR7IMBefvU+
      iBG0WgwpKeiTk9GGhdHy2GN0v/sukQ8/fI4ABEFgRsTNlNuP4vD28slqQBRFZkQsIUgbeoWv
      QOUctAbEiBQEQUQwh4NyChQFpaceZBfutXcHanS/AyQPssN1jgAUZyuKR8aw6G8YFQ9yZxm+
      4+/jK1mN99gEjFMXACCGDkEwmREE0MQMw1dRhOLqQRH78Jetxr3zKQStEcUvIZyzRN6KNnMi
      gs4I3n4BeFqv/hdhgiAQNHMmqevWYd+9m74dOwhdvPicOMmmLO5PfpxNrf+k0VmFV/KgETWE
      G6KYGXEzUyKuV9v/1wJC/4vr7EdhCAWtBeONr6IJsZyJGnRuc1Vu2YVz3dPopj+DYfISNAlT
      EUxafMe3IHfXn4lnr0Xx+hD0GuS+VhBEBL0Jz9bv4u8Lxbz0FQSNHec73zzXNp0FQfxEK0Ef
      d/UFcBptRARht912TpiiKEiShFarJc08ku+l/IEd7e9S5szn5uj/INqQiEkTpBb+axjtkOvx
      luzFm/sc2rQxSA15iNEzMUy995x4Ysp1aMJfxnf4f1HsJxEtZqSqzaAY0KZNOxOxtxT35ifQ
      RITiK92NYJ2GxhqB19MDLge+E+tQbHkoHj/COcNSwqf7kMFDrt2Gc3l5OVVVVTz99NPU1dXh
      drtpdFciiAL3Jz5JqmU4Zm2wWvgvM4qioEje/j8fgtaEoNWD7BsIR9SDzgxy4Lcg6EFnAtmP
      GD8f47z/AmcF3sMrUFwexJgRIMhn5esFIRjjzc+jTRuLVL4Gb8FKFCUU/bw/oMsYjSL5QAEh
      fAyi0Yu3eB1C9HSM1/0a8GOY9QRikAlfyfsQOgld+niw1yG7PSAaQGcEyR84nywh6EwIWt21
      903waXP++Mc/EhQUxNatWwkODuanP/0pEydOQBCuWc3+WyJ1VuPe8IurbQagINsqQBOEGBZ/
      yXK9JppAnxzheeaZZ8jMzCQnJwePx4PD4cBkMqmF/yogGMPQjVx6tc0AvHj3/w3FGIt2xNIL
      XVHzuVxVAfj9fnJycti0aRNLly5l+PDhhIeH4/F4aGlp4dixY3R2diLLMsHBweTn55OdnX01
      TR50iOYI9BO+dbXNAHyIlmgUXQzatCmXTABXrQkkSRLt7e088sgjuN1uTCYTP/rRj5g0aRKl
      paXMnz8fm82GJEnExcXx+OOPs2vXLj744IOrYa7KvylXrQaQZZn//d//xWw209bWRldXF6Gh
      oUiSRHx8PC6XC0mSAOjs7OTZZ5/lvffew263o9Pp0Ol0iJ8c1lJRuUiuWgnS6XRYrVZ2797N
      nj17KCkpobCwkKeffhqz2UxExJlxYo/Hg9VqRZZlnnvuOZ577jmOHj2KLKs7Qah8Oa7qKzQ7
      O5uKigrcbjc9PT388Y9/5IYbbsBgMPDYY48NvOEjIyN56qmnaG5uJjc3l9zcXA4fPkxxcfHV
      NF/l34Ar1gRSFCUwlt/YSHp6OoIgEBUVhU6nw+Px4HK58Hg8jB8/HoBJkyah1Wrxer08+OCD
      zJkzh6amJsrLy+nt7cXv93PjjTdeKfNV/k25YjWA3W7n0Ucf5U9/+hMvvfQSAOPGjWPBgsAa
      j7i4OJYvX45WG9Cky+UaaOIEBQVRVlbGo48+Gvi0srmZvLw8gs5aS6Ki8kW4IgLweDw4nU6q
      qqro6OigqamJo0ePotVqiY8PTGpMnjyZyZMnD6Tp6+sbEIDBYGDcuHEMGTKE8vJyALxeL/7z
      7CqhonIxXJEm0HPPPYfFYiEvLw+tVovJZMJuD6zIczqdAFgslnPS2O32gVlhjUaDIAj85Cc/
      Ydu2bRw5coTJkydjtVqvhPkq/8ZckRpgxowZ/OlPf6Kjo4Pm5mYcDgczZ84EAm96YKDpc5re
      3t5P7RYXExPDiy++iCiKtLW14fN9est0FZWL4YoIICUlBY/HM1Cg582bNzDCc7oG+OSYfm9v
      76fyEQSBIUOGYDabqa6uprOz8zJbrvLvzhURQFxcHL/4RWBB1YQJE3jggQeAwMhQT0/PedOc
      LYCza4KwsDBSUlLo7u7mxIkTl89olUHBFRHA6W97AaZNm0ZISAgQWAvkcDjOm+bst/vpGeHT
      eY0aNQpFUThw4MBltFrlcqFIPvyVZfiOn0T2/OtmrNLbiWx3n/+Y34vi/XRaub0Rb+ExfMUl
      yE7PuWmcTs5uVCs+95WbB6isrAQgOTl5IMzj8Qz0AT7Znj9bAJ+c8R01ahTvvvsu+/fvR5Zl
      dUnEVwx/UT5C4ki0Zj/++maUIAHFqSAYZeROF9qhWcittUh19RCXjsYThiC6wByBXFuOoglC
      cDbid4agz4pCaupEO2wogkZAbmpCkzoKUePAW3wC/Yhk/HUtaNNTcG/cgH7hDShNtRBkRak7
      dmVqAFmWKSsrAxgY9oSAADyegEo/2eHt6uoa+P+T4hgxYgSCIFBcXIzNZrtcZqtcJhSHH43V
      hFTXiNzdhb+4BDEpHsUnQ18D3qNHkTr8iCYteLqQaluRG8qQOx1gtCCdPAo6C5rwIDw5+1E8
      NjyHS/oz9+E/XoRnzyE0yQl4C0rQpifgPXYCMSYOQfCBJRjf4UMQHn5lBNDX10d1dTUajYa4
      uLiBcKfTidcbcG30WTXAJ8f7s7Ky0Ov1tLa2UlpaehktV7kcCEE6JJsTTUoSit0ORguCxoP/
      eA0Y9CDLgT2jdDoQtCh+D4rDgdxei9TuAp0WRBFFkhFCItANH4NuaEp/5jq0I8agTYtC7rYH
      8hE1oMgIooDcUI1s9wY2XtBorowAmpubaWtrQ6vVEh0dPRB+tgBO1wQQqA26u7sHfn9SAImJ
      iQQFBSFJEjk5OZfZepVLjXb0ROhtxl/TjH5yNtqMDBBMaDNiISgWbWYWmlBQxGA0cSlowgQI
      TUKblo6o96FJzUKMTULQgX5EBv7KUwjGwL4pYkIyglGHZug4RJMG3egs/OWn0I0fjyY5DiE8
      EUFyoxkxDE185pXpA5SWluJyuQgKCiIsLGwg3OFwDBTu00KAQIE/exTo7GMAISEhJCUlYbPZ
      2LNnj9oP+IohaHRoM4adCTAnAKDNGnkmLDKMgc1xQkYMBIujR5/5PySwFY4Yk3gmLDJm4H9t
      aqC/KUb0hyVlAKCJO+OA5ZIJwGaznXdiShAEcnJyUBQFnU6H2+2mpaUFgFOnTg2M8LhcLlpb
      W1EUBYfDMdA5Bujp6Rk4djrP5ORkjh07RnFxMcePHycyMvJzbQwLC8NoNH5uPJXBwyX7Imzh
      woXk5+ef99jppo4gCISGntnAyu/3DyyJ0Gq1A4vbPjk/oNfrMZvN580TAjXChdQAr732GkuX
      Xgvft6pcK1yyGiAsLOyC3sIXSlRU1CXL6zQGg+pJUuVcLlkN8Fl7d14LnN18UlE5zTW3L5CK
      ypVEHTpRGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUqAJQGdSo
      AlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnU
      qAJQGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUqAJQGdSoAlAZ1KgCUBnUfKUF0NbUgFf6
      /HgqKv+KixaA5Orhm0sXcbgm4MZ01cvPUt3pvGQG2VvKePKxX/PkE4+x7VjtZ8Zd//ar2FwX
      kqvEX595hvP7pL90dDee5Le/eYInf/0ou47VfPn8Go5zorHv8yOqfGEu2kWSokhYE9N558Xn
      GPvMb+jt7sInyZQf3cu+o5VMmXcjSfp2csttNNXXM33yWA4fKmDqwpvJiAniwI6NVLX7uPnW
      mwk36wE/u7ftYdrXvoZBhJLd68m47n7un5eFIAh0NVexYWsOUZnjGRJkxxc9lqGxRnbvziXw
      8leoLj5MTsFJJs29nhFJ4eze/DGNDi1LliwmzKwDoKuzk9OeQJxdzXy8YSvG6EwWZKdwuLyL
      WaOi2FvcjtHXTm9PJ1JwMqH+VhqcZm6/aT5tlYVs2VvA8MnzGZOgJ7ewgra6UwydupAJWQEv
      h0X7tjJk7j18c95IBAG6m6tZv3U30RkTSTE6sGSOR2kqosOQSorORqMUhav2EEU1XSxeejuu
      plIabXaqapq4cemtbHjtWXI9w3jqlw8TH6q7JA9c5Vy+UBPIGJ7E/fPTeHXNvoEwh09g6rhM
      /vHycnrqjrL1SBPj42SeefVjZk7IYNk/P+Dk3g/ZXeVhVKLM88s+HjAhLTMDTb/nouybv03P
      wZX8z99W0O300dNtZ/yUaWx+/UUki4b3PtiKreIABXVuNIDTVs0Lb25m4oRRvPz8C+RveIOj
      nSaSDJ2sWL37vPb3dveQNX4KRVveospp5ui21bz4yutEJaeybvXbRA/NZveqv9FpTqOncCNH
      6p102T3MmDGVlS88R0dHHas37mfW7KmseOXVgXyn3HgPXYfe45m/LafL6aOzq4+J02ay9p8v
      0tdbx+Z9x9m1fi1rt+5j7+aNyEYzsj6YiYkiz/9zPeWHtlDcLjAuQeGND/cydswoJs29gaig
      K+LNdlDyBfsAAmOvvxf3sQ+paHciuTrYsmUXh4+U0N3bA4LAiHETyMoaSmJyBmmpaXjdPdRX
      VNBta6Gwys6USUMGTEhJS0XbLwDRGMbDv/oDd08O44VV28ndvZmcfbn0dPeii52E0FnM+i0H
      uWnxTAAcPS20NXeQl1/IuClTqK6spbujjiqbwoRhiee1/mjuLvbl7KOlqxenV2Tq0DC2lXsY
      Hh9ERFQaQ9JTyUpPISszk7T4aNq7+9i1ZR17c/Pp67Pjl2H4+GwSk1IwiWeceOvMVn702FPc
      NtnKq+9s4MDubezde4CuHjsJ42fSULARe8RIwnorKOvTk6Gp5+NN+ykur6WntwsMIWRPGE36
      qJHY29qxmE1YgkPRaVS/ZpeLL9EJFvnP//oB+/ceQva6aWxswuFyw2c8q0kLb8TXXktfn51I
      62kvkD7eWv4aTjnw6/iBjTz+m6d4Y30uY0ak0tLcRK/djl9WEEQtC0bGkdNqJCMy4DY1In4U
      w5P0tHf1Eh4axtzFi+mur6HPbici8oynSdnRwj/++ldeeP09Ghob6Oq145MVHG3lbKrW8dub
      knht05F/YblEQ30TdqeDz/Kodjx3I79+8resWn+QkUPTaW1qpLfPjk8GwRiD2VZGzOgpjLT6
      6AvJQHb20NTSisvzaf/KAOHxqWx57S/UtHvPe1zly3PRTvIURUGWZTSagB9vye9H1GiQZQlF
      ERAEEAUBhcD/sqygEQWkfm/usiwFwrRaREEAFCRJRhQ1CEIgf8nvB0FEoxFRFBlJVhAFAVHU
      kL/2JRoSF3PrpGRkSUIQNSiKFMhDo0EUBWS/hKyAVqvp9wqpIEmB8yIIaESx/5wCgiCgELBZ
      lhVAQRQ1KLKEIAbOjyCCLCP3e8IURQFFCaSRzroX57VdUhBFAVEUUWQZRBFBkZERAuklP4Ig
      AgKCoPT/f+a++f1+xIF7pXKp+Up5iaw6sof391fx8x9+G52oFgiVL89XSgAqKpear/REmIrK
      l+WiBSD73Hzw1nKWL1vBuq17cHj8n5/oX7BzzVtUdlzY9NSpY/t5ZdkKVryxkpO1bXyy4lIU
      BZfLxb+qzhTZx8GdG1j26iscrWw551htwVa2Fpz6AlfwaepOFvDmW+9Q3dL9qWN7Nn3A8uXL
      2Z5bhPwZ9a7ksbPsjVWXxJ5TpQfJK2u6gJh+Xlmx4lOhHo8bvyRTU7CdbQVffnLvWuMLCMDJ
      /sJTLL5hIcGeen7zzD/wyQp+nxe73Y7PL6EoMl6PB6fDgV+ScDkdeP0SKApejxu7w4msKMxa
      cifpEWY8Xg8elxO358xoh6LIeM76fTIvh7Bh05mRPYq3n/0duZUdyJIfh92O1yfhc/Xy52df
      xO3xIvl9AVskeSB9Rc67bC33sXDhAmLDzCiKgtvlxOlykzRuHvPGJaMoMk6HA4/XD4qMx+vF
      5XTg8QVEPpCvXxo4t89/9loML6+uXM3sycN44+21NJ48RmvfmRfE3r17mDr3OvZ/8DLVnV68
      3sD1+b1eJEXB7/NgdzhAZ+a+e24HWcLj9eJwOPBLMhC4fw6nC0UBWfL32yMjS76APWddM4rC
      1q1b2PjRx0j98b1eLw67A0lWAvfA6cTp9qAoCo3Nzfi8HqT+wQCP28WHb75ASW0HSWPnMnds
      SuBF43TgdHmQZQmnwx64X19RvtAMi85gJi4hibiEeykofJzG+ipWvLgMa1w0DTb4/W/u5Ad3
      /YbsmckUVbsYMyyGqk4tf/zVd1jx0t9pb2lhyPU/QCjfwJilD/DyEz9lVPZMcg8V8/9eeB6r
      ITBs+c7GYu6/a1H/WQVCw60MHRnFL398D89uO4hQ4eZQeS1VrRI/unMKhw4eYFfefISGAsqb
      WmjxxfE/jz6IAEQmDaHh/dX0LZrGyMgQ8ja/zceH60hMHsLsdAcFzCCmZQdHGpx0dXTxk4e/
      yyOP/Z6Z08dysLiVV/7v5/zht3/AmphC9rwllO94l07FREuvwv88+RMC40A6rHTy89/+hf98
      9PeU7nuf6CUjiQkOXIHX2cPe3TsRI4cQFyTxpz/+lcef/BVrX3yBYV+/g9V/e47QuCSWLF3K
      yrfW8Lv7p3DrI2+zZGIk9d4Efv71Cfxt+VqCDT6Gzr6b1kPv4TJGMG7WTZRufh2vycqUr93G
      tFHJALhaCnGETSLTUUJlu4Og2p388o3DTE2SsYdP4XvXpbJyzQ5qKyt56PHfA5D30YucirmZ
      24e7+d0/NtJbf4hqZzhSVhBl+jEkdOaws7yXtLQhhHlPUdahkDV6OrcunPSlCuLV4sv3AWQo
      P7SLEYsf5L8e/imTIjoobvSSOmYKP/zFI4QatXzv4Z9htdfRh0xkZDxR4WYO5hUMZBEcN4Rv
      P/Q9Fo8NpbLVDYAmKP6swn8uPp8XnV5PsDUCozGI1pIiIkZNZtKU6dwwcyzhVisGcyhVx49y
      ug4JT5/Mc398hB3//DNvbT3C9txSHnviUf7jgds5vchgzbqNiCjg6KGmpZvErHE89NAPGWpw
      cqxgM3Fz7udHP/ox2XGw8UAJyDKO2hra+k9ycs9q9OO+wSt/+jXb3l1OTrPIyJgzSxj0pmCm
      TJ+BVWrj4MnmTzwJPUEmLfrgKGLCLAPB46Z9jR/85Fdo24+zc9tauiURUW/kxIkThIWF4vLp
      yEiOJSLUghsTqQmRA2k3vPMebm8PDlcXH27YD8CMBTfx41/+lt7KA4gGC6FBZgx+O8dPtQMw
      +ca7ObFnHTs2buXmbz3IzOlTuO2OOwnWA5KHrYWtPPXYz3jg7puJDA/H6fQwJDP5IgvNtcMX
      EoDP46S5sY5N7y9Hih7H8OFpHD+4l8bGWk40yyRZdRj0usCYuVYMjMXLMrX5mynpDWXy6Mxz
      jdDr0PSPz/v7mxSKz0lFdcNZsRR6umycKMrjrys2cvuNE1jxz4+YO38OIYbAuXq7O7C1V/Lm
      6lzmz56KsX98HqD+ZCHFNTbmz5vMqapawnR+Dh0rp66ukdONhsSkVOYuupnvPfxjxqVY0ekN
      CIKARpIJjkuj7NAumpob6fSIJMUncuOtd/Dwr35KbH8Zd/T14nD24ZQNRGk6aXcJtLV1nrkE
      QcRgNGMxanD7ZOy2Fqrq6jlytAQUgSXfeJBYTyUbDlUOJNHpDAiCBkHyE5OQQvqw8dxzz33c
      f/tCsuffxI3jI3ll1WamLLiN+cMtvLF6RyCh7Cav1sVNs8cz+8av01a4E6ckotPpAA2K5Gfd
      268TM3oaGfERA+fTmGJINDrYV+9mfEo4Gr+X+qbGwKpbUUOQr5OCsloaGppIGT2D+26ZwbLl
      b32RYnRNoHnqqaeeurgkAg5bPSVlp4jKmMBdN88jPCaVKF0v+wtKue72b5IaGYLBGERCYjRG
      o5nklGRMRiMjJs/EfqoYfVQGWUMyGZKaQHRsAuFBFpISE9DqjUTFJxNi1KD4+igubyItOQ4A
      rUaktOgY7d1u7rz/O6RGhpEYaaSoqp1JkyeQmZVFjNFHvSOIiRlBVHX4mTRxNOlpKYiAXqeQ
      m7OHDjmce+9YRPakiRQf2kubU2BYVjoh4TFcN3siuXv30O3TMiQ9FYsliKT4aPRGIxnjZ5AZ
      5GXfoSJiM0YzZ0IKOTn7UUxW0pNiAIhNH4HcXs7R49XMueV+JiVpKG/xMCQ1cA2K10lRcSnx
      Y+aycMpIxg5NYHtOPtkzZ5OeGs+x/buQIoayZG42wRYzSYmJGC1hJMWEYTAamTzvBvwtZRSd
      rCdlSBZNJ/M50Qb33H49p4oPUtNj4I5bFmExaJGdNnTRWUweP5KoqFhiw/RYopKJjoomOtyC
      0Whi9tzZFObnkzEqm8zMDBIiw0hKTMTQcwKbdQbTRySQkBBH8bFSskaOxhoVww0LppG7awe9
      kgmDr4NDpQ3ceeftRISYL2GxvHKo8wAq59BQUcyrr3/Aw7/5DVaD5vMTfMVRBaByDj3tTdgx
      Ex8V9lnLuv5tUAWgMqhRZ4JVBjWqAFQGNaoAVAY1qgBUBjWqAFQGNaoAVAY1qgBUBjWqAFQG
      NaoAVAY1qgBUBjWqAFQGNaoAVAY1qgBUBjWqAFQGNaoAVAY1qgBUBjWqAFQGNaoAVAY1qgBU
      BjWqAFQGNaoAVAY1FyUARZbwer34fAGXPj6PC5vNhs1mw+nxoch+nC53f1w/3V2dOFwevB43
      khzYjFbq34TC7eyju9c+sMuzLPnotNno6vnXbkFLioo4vzOhL4qCvacbW2cnbq//X+4sfb50
      TofjM+M72uopb+w6zxE/hceKP9+u3oBd52x2+y8oLDxGTXkRPa7+XfUUGbfHg8vtvsBrkigq
      KjrvEVny09Vpo9fu/Iy8ZAoLj13E/WOgTFxtLlgAiqJgqz/J5s0b2XOwDIDe9kbee+l/eP71
      ddS19VBXvJNfPP0SsqKwbe1bbNmxi8NF5Wz/cBklJ8t4Zdm7ePuf54ljeby37BDVM+gAACAA
      SURBVHmO1AQKSWflQf7fs//k4NHjSJI/4G5IkvD7Azsay7LC/j178BDYidrnC8Tx+334/VIg
      zO9H6qpm7fZCZEXB1x+mKAp+nw+v14esKAE3TYoCuHj2938gZ9cO/vy//482h4Tf78Pn8yM7
      O1m7MQdJlvF5vfgleeABe3saefzRR6jp8qLIMj6fD2+/PYFzSvTUnyS/rCWwC7MsD+QjSQrB
      IcEoshy4rvPuSuPl7394mpwdm1n27obAbtteL5IsU3xgIxWtjoGdnhVFITg4hNL8PdgcgV2a
      m4p3s6uogZdefRW5/9n5fF78koQkBXbpliRp4IUmK3727Mk573O3Nxbz9N9fYNlzf6au248k
      +fH6fP3uoHx4fT4kWSE4JARFkvD5fIEdwmUZf//x03EDzyxwv8oObyOn+LP9QF8JLnx3aL+b
      HVvWUd7kInlawPuiNTGTr83IpjZoDsOSInhrax13TAwjv8FOkMVEbRssHjec3aVrWfH2Bn7/
      xE8w9Xs8jIyy4hMNhJjPbB4rSX70egObVy0DaxxKcDS5qz5gzPSR9GoCvnjbTx7gw+0nMXg7
      mbNoEa+s+IAHvn0vbVVH2Xe4mrtvzGTtulpSgm3sO1qN4Opmxo2LWfXya8wYnYBm7F1oyrcy
      fOHXSY2AiPgMbr39ThaO3s57h6tJdRwhr7iK+fOmsvajrYwZkUB+7mGqGrr55c9/gFaE4vyD
      LLnjDvbvPUhwSh9/+LiOMEcT3/3Zj8nbs4sTZc3cuXAkvU3FrFzTxlhLEyd7RVo77EyaPpFj
      Ow6RGAWdGiNzr7ubtCjDp2637PfR5/YTHxdJ7pY1VHW4sEs6NHX7UdpCcca6yT+YS8K8Bynd
      t4Zh4fqBtLuP1XHHt+Zz8mDgd93xg2w9VIG9x4Fe9PKNH/wn77y6nJhwDS4/6KKGf+ajlyU/
      gi4UPb289uIqFNnJyNnXsX/7LsL1vShJs3E3FDExzEOuLx1b/UkevHE8r22twOLr4Ma77+Pg
      jp34HN3M/tpUXll7hIe/vZjjW/KYNzb1govg5eCCawCP2051oxuXpJAWZfnUcUdbBfmFZVQ1
      tLJ53RamXXcndy4czz9efg3BGExqpIbC8vqB+AnpI5k7PoWCstNvAYER46cyZdxQ5i+aycqV
      25ienUVM6jDuuvsuPM11AJzIK2fxvfdx56IJVJxqJnXoRIZFa6htstNX24Q1cyhjJk2ho+kU
      N9z+DZbOm0BlZQuZoydz830PYSvcgc0fRHK46SzrFU6daibG7OBkXR/Oni7E0HjGjM9G011L
      j0+kpelUwKmF4mXrln1UVVWwb8dOfILIxJkLuX58BiUlJ+ns89HTXI/TDyHxI8FeT3mnzJIF
      s7EavNhdgUbcxCnZuDu78MqBZsvJ/L2s3bATT7+7gbC4NLKTzTgUC0cP5uNHJCE5heEjhzFl
      wiiOn6xGL3qpaez41LPwC17OltTJokP0eiQSkpK5Yd5o1q96k6SJN1JQcBBBayEhJuzMnZAl
      tq17m9zCioGw9FGTmD4sigP791Nc1o4lMh5PUwkj5izllhvmYzxdikSReYtvY0hyMG6fxIQZ
      C1g8cwzHjx2mtMlBRHwiJkFh1OS5ZKUlY9ZemHOUy8kF1wDG4Cju/vYDgExaasaZ8NBIwkx6
      aqtO8a2fPMrYlFDefed99m7+gLLGLoYOH4tVaGDsdQvZ+eHbDM/4LlEWLR+/+xptfQpzbv5a
      wBBTEHUntvG+v5Moo5ffPX4vh4+U01JZwhtvrGLEzFn01ZYwdV4277z9GnqThZsXz8ErnUIQ
      RLxeN7GpSejDktC1HiBj+ky2f/gWOoOZG5bM4/DhkwgaC+H+ZiyTvkXAx56IxtvJ8mXLMFrT
      uGt6HC8cdBEeHU9QaAQRcjuNXUbcbg9JyckIArg6ahm28Jvc8rWJTNq1luoePdGhRoLlaBSz
      lkq3h7jEJCzBYUSZggl3yZQbR9Bna0FCh1anJy4hlqbmZnQGI9r+GnFY9iyGDdxVgfikREbM
      vpXCN99kyoI5FJQ1EREaTnLkSLbnHcIgeRHNVmLDLXjcCYQH6zDqAiUxSNHS6VMQHW28vmIF
      48dNx5h7FG1wKKnDJ7BuyzHuuC8Jc+t8arslQsPDiYsLbOAriBoW3vyNAUs0BgudVYXkh4az
      5M4bcTSeQlZ0jJwyh7XvfMB60Q4J04iLiyMkREKnE4iOicccHIHVb8YiRZIWl4SjYxMKQYTH
      WIl1GfH1tOHVn3Fje9VQrmm6lOf/b9kly83R2aK88upyxeGVLlmen4Xf1aMsf/4fSrv7ypzv
      NN31xcq2Qycv70lcXcqevfuVd5Y/p+Qeb7ro5MX7tyjFtbbLYNjFcY3vDSrRaeslwhp+SXJz
      9XbikA1Ehn26CXc5kDwOWro9JMREfH7krxqyn9qaajCGkhwfw1fVjfFlF4Db2YcfPUHmT3f0
      viwOpwOL+coU5i+Lx+VC1BvQaT7Z7ZJxOjyYLabzprsQ3E4HepOFq+c6WcHpdGE2f/V8BHzJ
      iTA3f/3Dk/zjub9TWN123hgrXn2Opk77BeeoKAqH9u0jb+ta/vzCy2w/cOxfxn3ptZc+Nz9n
      Zwt1bb0XePZu/vTrp3j15RdYtW73wJwFgN/eTmVj53lTyc4mnvnzq/g+Y1x73+r3Kek4331w
      kXvgyMCv1ppiSmtsF2hvgLWvv0SX+8xvT3czNa2ff83Ozkbq2wPzLrKnh/15ReTtXs/yV19l
      z5Hyi7DAz/Lly84JqTi2l1dfXcbHOw9fRD7ncrK87HPjKJKXXbsPfOFzXJSTvLwtq/jLyq38
      7DfPMCkrFpDQhCbw0N3zeWlrPn0VHioaOpm66Db2fvQiyRnZHDp2nFkLW3hj+Vq8aFl65018
      uOI1sufM5MDuo+iMMhHh4fQqFh6852YEID4tjfKd1Xzt9nsYF21i/ZqPGTM8mia/iSMbdmEM
      0zPhujsAsNWfYM2WXNCFcN+SsfzfG7u55YZZlBw9jEcfRay9iK2NsfzknrFs3nUEncXKDZOT
      +HD7MYKMOhbf9Q3yd29lwfU3oMGL2ZrOQ//xLTavepFj1cOoz9tMqz+YSeHtvJAr8+SDc8nZ
      k0t42gSWzB0PwIGtO4mKEDjZYkesO8CB8nZ8Ph0P3DaD9z/ejiEijUigPG8PhnGzoCEPm1dP
      eVU1k+bMwO3ws3fTh1TYPHxt9izS4gJNpuayfNbvK8EUEsWiyUms3nwYv9fH1x98iCiLltri
      A2zNq6Siop6ZPS28+8Fm/MHxJLoKea86mp/dOpK9uQWkTVyI3JhPXYefBdfNYNvmnRjDE7H2
      5LOjI57f/vg+tIpIZlo8H722iRse/BFJVgv5ezZx5EQDC265md1r1qIIXixRCXR0O3nojjk8
      /8/NRJhlJsxbAkB3w3HWbMsnNC4NsfEI4+feTfaQGHbt3MX0+bPZsXYDqRF6DtV343H7uPvO
      m9m1aR2dToHbrsvmpff3MXPcECpqKknLGs3KZX/nP3/5OxqL9tHR52bSwjuo3bcWoodj1XdR
      Xt3CuJnXM3LkkC8sgIuoAVz85XdP8s5br/OX19cOhNYez2PFBztZMD6ZNbsL0GolKk5U0CMZ
      WLRoIWOyx9Ndk8/4RXdxy7Q0tu8txqOPYEJWNLIhjklJ4YSMmIXYXE8PIAgCSQkJgJO1q97k
      QGE9w5NE/vvlXYzNDEY2xPHt7yxl/7qdAOzdtJcl9z7AlNhuDp9oQBs1krToIEzGII7t2k/i
      8HFMmT2dLdv3cf+D3yaFPopPnSI8fQKzxyRy8GAe7b0Sn/SFEhlpxeHoQ2sI5siBA8QPHc6k
      6TPQIWMJMbB/5y4g4H942/7DhGtdvL96K7aWNkbPvJ5oVyunetwEWYLJ25ODJENKegL5hw9T
      cLKNEHrxiRbiooycqmqgw9ZOmDWO2IQEzDoBkFm/+yAPPng/EYqNk/V1hKSMZc5oKwVVbYDM
      rv3FPHD/fYxOi8Pv8aK3BLPrwG6GjRjJtFkzwe8n2CKQs/MQto4OwmKSKPhoNb2CgcpTFaRm
      ZTFtxixMehGdMZiYyEi+8/B/sn/t66zZkYdfUVD6qjlSVE2fz8id80bTLiSRKLlo6O3Cb07i
      W3cuZldOLgCrV3+EYNBSX3WCRfd+n47CzSx/fwsNdQ1IKNRUVdPZWMeo2UuYkWxh3UcfUXCi
      A7+jhfKaWgwxo0kIUnDJBjKHDmdk9ngyg7pxGUfw4He/xf7Nq2lt72XuzCw2fLQfrUbgRE0N
      0VFffDTpIgRg5Pu/eITFS27jB/csHghNGZHNf3z/PxiekURKVATRcemMHzsUjU4TcI4HJCQk
      c2D7BnbklpKZFY9Oq0EARFGDIOjQ67UICpw76a8hKiYWyd9HQXEjM0eGUlrXTXXpEdZ9sIH4
      MSMBSEqNYMu69eRWOMmMMaHVaKk+cphGp4JOK2IMC6GuuJjU2DDWrNvMiQ4HsUEGdFotSSMm
      Ur5nHcOyZwyctaGylHVrV3P4lJ8EuYHSZgcGnQZDiJX640Uc2LMNn8aEpv/aumsOEj32JmYt
      +jrRvho6vQoajYhGFDi+fw/dihmtGGgaGawZ6FuPEpo1Gkt4LDFiB3uPBeY34hKTqS/Lp7nn
      dFtGIDXSwtr1W6ixuYm2GNBqNWhEbf/ssUC4SWL91m2cqG3mZFEubU7Qa0TMoVYqC4+ye9du
      DEYLgqAQl5BGXdE+TAmp6HVG5k6fQbg1mvLSY3j8p++8RO7uPQRFxdLeXsmeXYcxmwN9k8Cz
      EjHoDYgKyChUnTjCug1bSc1IB2BoWjKiIYQp02dRlr8PnyGU3u42orVOPvp4G1XNHYCfA7u2
      sfd4PWPHjSQizEjG8EkMjQ9Fo9WiD40gzuRh79EKLH4vp/q0tFYfYtPHHxGTPgGNqEXQWkhO
      isAam8S0/nLwRfmSnWAZh8OFxRLoiHqcfXT1ubBGRuJxuwiyWLA77FjMZno6bchaE+EhJpxO
      DxaTHofLj16jIGv1SG43xiDLgCI9Tju27l50RhMmvR6TQYvDWcs/lx3izm8tJioyAqfTgcVk
      otPWgdYUQqhJg90LFr1Ah60bvcFIULCZbls3YdZQOts7MAaHYdYJeGURvejl1RXv8ND3vkNg
      OF6ivaUNWdQRYY1AKyjYbDY0ehOhIRa6bJ0EBZnptTsxGkwEB1vweZxIohGjTsTlDKwP0upN
      yB4XGr2Ozs4ezGYzeo2AoNfz8cplTL/zu0SIbrr6XERFR+B2eJF8TnzoiAgLGRhRUWQ/7e0d
      mEPCMWnBK4to8SOJeow6DbLfS7utG5PZhNlkoKuzB53JSGiQGVtHF0EWI3aXF6PRhOx14BMM
      RIRa6OxoR2MMJtRioLOrm7DwCDSiACj0dXdid0tERkXhsXfhlQXMZguS34/JoMHtFxElH1pX
      Lf+3upIHb5uO1RqB2+XEbDLS0d6OISgUreKlx+4mPMKKTpDo6OrFZDJRtP5d5HGLGJ0QTliw
      GXtPJy5JJDLUgssHesGPrceBNdKK5LbjRY9W9tDn9hMVGYHb6cRotuD3OOjssRNhjUKv/eJd
      2Wt8GPRcZH83R480M3HyZ0/dXygVxw7iD09neEr0Jcnv8+ioL+dkh8KM8UO/+v63nB3klvcy
      bVz6RSWrKzmKLmUUccG6z498BfhKCUBF5VLzpb8HUCQHOXvzuJCVrc7uKjZvzvvMOC0lOzlU
      3fNlzboMyHi9n7UYW8Hr9Z73iOxq58XnX+fjdR/S6ZQ+dby75hCbj9Z8rgVer3dgRark9+KX
      FDZtWk2P68stEu9pKmV7bsmXyuNfUZi7nhPNFz4MfqW5KEfZve21bNi2j4TUDAz97a66Izm8
      t2Uf6WOzMXo62bhpG6FxqQQbdXS31LBxyx6sialYDFrcfQ3s2lpAfUc7aZkp1NfUEmLWUNFg
      w9Fczp6CKtJTEwgKC6YyP5+8wlLiU9Kwt1SxdfdhElLTKC/YQ2l9H6E6J5u3HyAuJQ2jTkPp
      8WMcL8hD0mjZl3uM1LQUqotyyS2sISU5ltLCQxw4WExSZiY1RQc4WFJLamoy1cUHOXyiCsWn
      wUgf67fsJioplcoT+VTWtpGcGFgj01Cxn0cefZaRY4dxsvgYJ2uaSUxOpKaykjCrlc66En72
      yO8YOWkmdSW5FJQ3k56aiCjAsW1vsrbCz00zx2PSSBQXFlFc3UJmShyFuTs4VnQUmz6RcWnR
      KJKP3F1bKG91khprorrOjkHu5FRTK//9xK8JzxhLUmQwa/7xBGtP+hHsNfR2dNInm4gO0bFr
      ywbc2nCiwoOwt5+iza3DVl+OzhJM7alm3F2n2HnwBBkZKRzN2crJZjuRBgfF9W4Eh42QmFi0
      gkDZ0f0cLKkjNSGC/MN5tPVJdNeVcLTKRnpCODs3f4zNayTSJLN50xaM1kRCzXrKTpYTEayj
      pKoNPF2UlhZQ3dhNr1MiOc5Kfs4WarskggUneXmFiJYgCvZsw6EJJTo8GHt7Lc0OEb2vi9Zu
      D+VH91F0qpP0lGhqqusINipUNPcRGWpBkf0U7NtOWYsTvbuVbXuPkpKeTHlRAQX5BQTHJhNk
      /Oym1kUIwMN/3b6QR57+C12WISyZNQaAjVu2s3TRVPYWNtN5dAtKymTSokMxGfV029ppqy1i
      Y0Ensydm4XW2svtgM3ctSubt9UW01FUyPDmE93OOcWT3fmbOnUNP+XZqNDFsWrmZBVOsbCtp
      Ys2bb2HWuzh4spYjB4pZsGAWW95bSdK42cRHhqLXaXh92d/52pLr+b+/vMXcLA3FvREE00vB
      7o/oC05j46aPuWNKAqvyHCSH+jm4eT09Oh2Fx23MGa7nw52nyNnwT4wWHdtzqykvzuGWO76B
      oX/mNsRqoL7Kw5hkLzsrFYaZWqn1hJKXu4/s8WMxhwZRW9tGVoibwt5wRod2sue4nREZcQSL
      LmzGDHqLtqHg42iTjqDmHJqdboptIYwK6aJBTGRCejRHd6yiK2wCEe0HKOryc6Kkj1htBUU9
      keglO0uWXIdWEFG6qokYu4Teij0MmbqEre+uoqMmj+J2hQ2btnDz9fMRvC28t6mYI5vfxquz
      UFFbw+r312D21FNijyXa4GHd2ndIzhjC9vXrMaWMZnRaQPCtzQ3kbliLGBXPuh2F3DA2hD+t
      2EL38R3os2YiOXtY/db74GvCFTyUoclRmI16Nq15H5/HzjvbDiF1NiKKbvSJkzixZS1msZE3
      9zRQemAbJq2XJiEZT+FHHG6R2LBxE7fcsAANTt5btw9vSxnVDVV0GzPJEirIqYfqwiMMi9Px
      YX4Lk4Ync3L/h9QwhMlDY3H09VBdsJlSj5WDm9ayeNEM3tl8mGnjPru/eBFNIC1DR2ZhNIeQ
      lZ4EgL/nFAXFNew8WErxoV2MuuFuDHV7yCltBWDNu6tJTMsE6Uy1bzAYUGQJjcZId3cXNlsb
      Lq+Ge799Dx/8cyWO/hG5uIR4oqKj8XntWJOGcuvXv8N9S2/g/ntvYeUb77Dwrm9RvfcjTjQH
      ZjI1IVZio6IYkhqL1RqKs62CtbtPkJ6cgNfvJzYxidjYWNxt5azZWkpGYhwutxudzoioEREA
      S2Qii5d+gx/cdxOmiCiCNDL1zadnuDVIBJogsbHRjJw8k5Id75A6fNqZ43LgwxmDQY9Or0c8
      7zdSWhIT44mJCaO3pxu9yYwoCgOdYkmWMRr0GIwm0Gjp6myivbUFnwyiLOPvb2tqdTrcHg+Y
      wkiIshJqNOHFxPzrb+S/H30YAF34UOSarQxZcBs5W7cyZGgWSVnjuPM7P2FhQgc7KpzExYQh
      yTIiCl5XfxPO18KajUfITIrG75eJiooFyc/wiTP5wS//gKZ8K21KOFFBRkbPvBWro4TdeVWA
      wPxx8by1r5Y5w0zUOkxEBJlIiI3Bag6mx+Vl6vzreezXjxAfHExstBVJNjDv+sU8/aufBu6i
      JY54cw/lfQYyIw0YjAZ0BiOCItLZ1UlHeyteX6A8+bwezJbA/Xt3zToyM9Pw+X2ER8cRZY1C
      I3z+13QXUQOITJ5/Ez/84Q+ZM3EooiDQ29HK6NmLmT9rKplxwdhsnTTb9cyfNRGjTsQaoudU
      m5tRo4aTEBOOIGrw220cb/Zx29IFROg9lLV6GD0ii7aaE8SNyGZkZgohEXHEhIUQmxCLOTyO
      8akh7D1cRFJaKkWHDjNm5nzkrlochlimjh+GTiNgNBqJi4nHaDQTl5BAcFQKEUIXhCUxbEgm
      sdZwYqNjMYYlEGfqRRORzNiJUwj2NVLR1IrLHcJdSyazZ89hYlIzibGGEqrzk1tcx9D0JMCE
      r68OfUwWcdHRREVGcmhvLjfetgSDKABaNB4blvRJKK3HqXNYuH7eJLSigKDRYg4OJyk2guiE
      ZMIjIoiKCCN+6DSk+jwc+hiGZQ0hKsRMTFImNUf30mdJZ8G0bOirpFeMZPjQLIbEmqjrkkiI
      CiMsJpHjRUWMGTmMmOhYgswmsmdNo2T/LiRTJIkxEYBAkCWUYeMnER0SxLiJE4nQOjhQWM2o
      yTNwN5QRkzGSoRmZDB8/jRB/B+boJIw6M7haECNSGTY0iyhrGOlDhyPbKjne2Mu0mVOoLjnO
      0LFjCdV5qGz1Mnf2VMwGLcEx8QRpLUwclUFU0lDiY62EW2OwhloYNm0OtuK9tDg1DMlIITTC
      yqixIyg+sAuf3kpibMBmZ1M52sRspmaPp+XEYVqkaG6YPR4LfdR0C4waMYzYiGAiE4ZQX7SP
      Dq+BkYmhdMnBjBg2lKSYSGLj4jCag4iN+uyFiIN6FEhy9/Hhh6tp7+hh4de/y5CYcxfWSX4v
      PknEaPj0ipGy/N2UO0K4ac6EK2XuoMDT08Sqj/Zwx91fJ0h/+fdsGNQCUFG5YtuieN1OLmCD
      gwvC6XJemowuEtnvo6e3d2DnC5WvPldMADveepHas4f3Pb2Un/r/7dx5bJv3fcfx9/PwPkSK
      EimSOqnTshXZshMfseIrh50uzdG0iJO6cxIMGLCsQLcCGZBhwIrtjw3b0KLphaxbncTxETux
      5UO2bku2rMOWdV+WKUvWZUmUREkUKYrn/pCDZquRzXXaZODz+vMBH5IPn98HP/L3+/I79Xs9
      169+86sv5009oOrzR6hv6+Tq1TYmhwfwrHwlb0PyJXqgcuj78bucXBkKoXF1krhhN2O9N4lX
      LNAzMo0texPGgJOheQ2KlQizo930dQV5budGBm+U8Q8fOfnHt1+mtqaBqFzLK9/dj14hUHbm
      QxaWInjDasK+eXY+/yqLzgbae4d5Zv+fAVB7/hSOR4tpratkISDnO6/uJ04pcPbwf+AJRwmr
      4vEtuPnm/gM4Gy5yZ3qe7I17WLnTwKIimdwkFS1dTrI3FrOjKJfl8Q5+eb6DuKifZ196nopP
      zlKwfQdzQ2243F427HmWmqrLbH/ZQXB5hUPv/pq0fX/J9/Y9+tA3QfLVeegZQJVo53brFW4N
      3eZ6XQXzyz6ah9y8fvBNJtsbuT0+yeYndqGJevj10SqeKi4CIDtnLRu3FXOzpY7dLx1gZ56O
      2q5xAIYnZ/jGt19mZmqSF59ZT2tbF+GoHIV/nLrOUYYazzAiyyBy5wbtzlmW58cYml7dbZx0
      uXn5W/uYmgyytyiN5oYWnEsiB19/g676SwzfnWb37l2cPXcShVKgv2v1TxehJRfqlCJe3beB
      8qvX8YR1rLOH8UTTOPjmQa7WVLB280a2FWYyOOKmqKCAx7dIg///u4cOgCDqsAQm0K5/lomO
      ZrKLtqDxz1FZXUFQb0GpEJGLIjK1gScKkiita1s9UWvEM9yHMdFCXeVFGrpGyUu9t2QlisgE
      AY1ahUwQCfsXuNTYik6nBaKkF+1ksa+OBZkRU7yOteu3kW2LWz1VJiKIAmq1FlEUkav0BKZH
      qaoqR5OUikIuQxQEMtMyMSQmU1z821Wc3tYGSquvsTY7HblciVpvwTXWQXX5RSyp+f/tuuNM
      Onq6uygvr3nYj1DyFfpSVoH83iVQagj6ltAajEQCPqZn5jFbbUQCPhQqLSG/F5lKi3fJS3y8
      AYgyO+1Cb0rA455BVOlJMOoBWPJ60Gp1+Lw+NGoFK0EI+T0EoyJqnYFIcBmlKBASVYR88/jD
      MpLMCQgCeD0etDoNXl8QtVIgGJUhhv3MznuxWK0E/EtotHoiQT/TM27iEy1oVQo8N6v4TY+e
      V3fmYUkw4vOtoNdr8HkWmPcGsFot+H1e1Go1y8sB1EoBt8ePSiHHYIh72I9Q8hWRlkHvWZkZ
      pGvewGM5X4NeNZI/GikAkpj2UL8B3KP9jMz4CPnctHQOEI0E6Whr59Qn5+/7+GAweN/qmMbS
      Ewz0d1HduNqOb6Kzkibn/TswfOba5XLGF7789fjR9mpabq62Gwx4XJRUfX2+4/dfr6FzdP53
      ji+7nJQ1fXE5c+mJEh6mEeFASxnto/frNLHCuTMX/tfzI6HVJroXzp3EH/ziDaGV2duU1H2u
      G0g0ujp2Pjd4Ar55LpR8Spdz4v94Bff3QOXQSzOjXKxuIMWRtVoO7b3DscpBEgIj/NtHF9i7
      NYtzl9pYnBxjbnoCvS2TlZnblNU0YbaY+NHbf40iJZ9MeyIrHhelpeWoTMncaa1FabIwMh2h
      cI2d6YFGrt1eZHrKRUqSnrtzHtShJUbcIaadN2hzukhPt2JQyejp6eBGh5PMbAfjN9u40j5E
      VrqVxppyXCtKogsjXGrsJTsvExnQ391J6/UmhDgbviknbZ23iE/QU37uPEKcldBkF6233Nyd
      dpGapONKex8bMpM4d66CxLQs7gx00trWhYwVGtudZDtSaLtahXMmSLrdzPTIIH6ZjoB7jMWw
      kvb6coZmg6TEyxhxB1D453B5waBTEY0EqCs7x2xIg39qgPq2W6SnWOjt6aC5uYO07ByUMoFo
      JEB95UU6evrQpq0jON5Fc/9dclIMNNdfY84vI8mkwu0JYNREGRp1MT7QMakQYAAAB69JREFU
      Sv/EEunJFgRBoO5CGfMrbpYjWuYmxzFbLAwPODEkJCAQoav5Ev13l1H4XET0ZoadN5l3TdHR
      dp1lmRHveBsL2lyY7KbmWh9ZWQ4Gum/Qd2cKR3IKIc8UnT29jC+ESbHouVxeyp2pBfQJZrRy
      +Pinf0upE6LuWyzOzBJQJWDSCNSUXSCoMWM2aiEa5VZXE9dvdDDiU2ET57jU3IPNJOevfvAO
      GQWbuNvXTO+Yh1SrCavNwvnzl9iyef3vHYAHmAFWePtPX+SlF/6Ev/nJcQA0yUUIc7103hpl
      73o7tVeayF6/FffMLFt3bOCjD07g9wdhfoDjNd3krNvAto15APiX/Rh0Au/9+wf3fbWA3IAl
      MMiF6nqu9wywNNpLbesAx06Xk+Ow0XS1kvGRW5xv6idVmOB09WX+9adHGGo4yfsnP+HKoBeb
      ScaxI5+Sl+3gs3rUE0eOs754B6c+OkxD+Rm0jrWcPHSI7Xufo/zTD1gKRAgojNiiI1Q2DUI0
      xLv//C94A4v85JeHKDl9GoddyX+ebUI7e50rXT2UVPbhsK52r5OvzFDd0EXlhQrayz7Gb99E
      dPASl1vaqO8bwzXYSdvNSQAuHnsfw7piMpLiCIRhpKWKqqZOjl9oZFO6wLHS1X5BzRWnCdke
      wSALsDjexc8Pnaen4n0qO29SetlJpmGJq33DVFys4FZTFW3t9bxX0kz54ffon1kGYHl5nsyC
      LVSd/JjO67WMLcxRWd+GKMBoWzUfXmyh5tjPGA+E+cU//YjB2ShlJ46TseFxak4cYSkC/qk+
      zjTfZc8GE+8fLaek5CzrN+RReaGG7ktn8cTlcunCMS6d+RgxfSNj7dUMupZAlJO/JpsniotZ
      WZgjc+M2Pj1+mHMf/JzOMTc/fvdnAIRm+zl7Y5aCzET8KyH8wQgLN+sp6/WxobCIwhwrEUFJ
      zdlDTPiU1FZX8OrB/Q804P+nByqHzsnPQa2JI8eRcu+YjJSEED0ugd1b1nHy00YefSQFky2V
      hEQranGZk6dKSHU4iEQCyKJRguHVeazs3Cdobemo5fefDjVqDQgiCoWC6elZpqYmEWQq3jjw
      Ckc/PMpns2hyWjr2JCveRQ8Zazbx2p+/zYv7vsELm818fKqO1w4e5OLxwyzc27WVKVQoRRFR
      LkOhVpMYb0AQFCjkIiqVkmg0ikatRkBAJopAFJXBxtP7nucHb76C3pSExZxIemYKCYlG/Bg4
      8J0dfHj0NOEoJORsJHinmYg5Fx0CWq0SjU4Dopz5qWlck5OE7l2jLxTBoFUjZ56S801kpdoI
      B8PY09Iw2+3gXS358PkDaDUq5HI54WCQ3MItvP79d9ieZSQpyYYggCCP4xGbwNleH1sz9Tyy
      dRfff+cdchPUqzdapkClVCDKRfY+t4cjP/4Fm57aiwAEg2HWb3mCt374d+TZ4ggsuZGr1Yhy
      BUqFHFG+ul8aDQdRqHXIlWrkQhS9yYJOtTqERLmC1ORk9EYdS/4geq0ahfy3+6wyhZyVQACV
      0Yw90YxBoyCEhl1P7+Pvf/gWAKEVHzK1DplMjhic41RpI1kZaQQCIaKREN6RG1T1ubElxRMK
      h3ls627idQ/33+IHLof+i7feYvdjaxHvtS5IMhkxp+aTl5OJzmymMCcDlUqNzW5DpVKzJiOJ
      8UWRRwryKcq2cHNsiQx7IpYEA33OCQoLC8jKdGC2p2EyxWM26RDlCtyTYyzJLex9agdh123m
      iScv18FQdwt5j+0k15FCkjUFozEemyURgzWLjDgPrQN3yUpNpKWtj+17djHl7MaQVURhdgqi
      ANevXMbt8bDjmedINptItKZSkGOlsqKajU88S4bdzPz0KPOimad3FKHVGSh+dA01tVexpOVg
      MxtJTk5BqzNiT7IQFxdHV0srm3c9SbLZiCDImOi9juPxfWx6tIC+qzWEEtex5/HNBCa6WVJY
      WJuXg8mgJjc3i4aqCqJxaSTrAwR1Ntbm52GzJGBPMqPWGUkyG0jLcNDZUIs+OYfCoq0YQhN0
      D8+Rn5+LVhOH3Z6IJi6egrx0dAY7aws34RtpZ3g2SF5WGqIgoFTIuNXfReH2p3GkOWhqucZL
      zz6JTBCIt6WyMNzJHXcITTTIrm8dwD89gmvkNq6FRTbtegaHNRFzegHm8Dgtt9y88MLTxOk0
      2Gx2VCoNqRnpmKzJxOtUbHt8G61Xapmcm8dR8Bh2o5p4SzI9Xd2sX7eGJKsdjVrFluJttDfU
      gt5KSpIJeZwVYaafca+SdQWFpBvD+OQJ5OfnkWkWmBVtaLx3MTvyWZOVhWtshMRk++/0dHoQ
      MbcK9NH7R9n/xnf5Q/UkmBu7ydn6Ab63/3nkX8vWD1Ha6s7h1ubz5Oa8L3zk6cNH2PvaAXQP
      WDDjGu6mtLYFX1jBm6+/huYh2pb8ocVcACSSz/v6RlMi+SOQAiCJaVIAJDFNCoAkpkkBkMQ0
      KQCSmCYFQBLTpABIYpoUAElMkwIgiWlSACQxTQqAJKZJAZDENCkAkpgmBUAS06QASGKaFABJ
      TJMCIIlpUgAkMU0KgCSmSQGQxDQpAJKYJgVAEtOkAEhimhQASUyTAiCJaVIAJDFNCoAkpkkB
      kMQ0KQCSmCYFQBLTpABIYtp/AeyQ9kVXU77fAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
